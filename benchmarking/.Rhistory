num_scenarios <- nrow(params_1_pop)
params_1_pop <- read.csv("params_1_pop.csv", header=T, sep=",")
num_scenarios <- nrow(params_1_pop)
# extracting names of moments
stats_1_pop <- read.table("1-pop_scenario_1_final_unsorted.txt")[,1]
# extracting names of moments
stats_1_pop <- read.table("1-pop_scenario_1_final_unsorted.txt")[,1]
params_1_pop <- read.csv("params_1_pop.csv", header=T, sep=",")
num_scenarios <- nrow(params_1_pop)
# extracting names of moments
stats_1_pop <- read.table("1-pop_scenario_1_final_unsorted.txt")[,1]
stats_1_pop <- read.table("1-pop_scenario_1_final_unsorted.txt")
getwd()
setwd("~/Devel/momentspp/benchmarking/")
# extracting names of moments
stats_1_pop <- read.table("1-pop_scenario_1_final_unsorted.txt")[,1]
read.table("1-pop_scenario_1_final_unsorted.txt")
stats_1_pop <- read.table("1-pop_scenario_1_final_unsorted.txt")[,1]
suffixes <- c("A", "B", "X") # from sorting in moments++ (SumStatsLibrary class)
# convert to unsorted moments as presented in moments.LD
for(i in 1:length(suffixes)) {
stats_1_pop <- str_remove(stats_1_pop, paste("_", suffixes[i], sep=""))
}
num_stats <- length(stats_1_pop)
momspp <- as_tibble(matrix(nrow=num_scenarios, ncol=num_stats), .name_repair="unique")
names(momspp) <- stats_1_pop
write.table(momspp, "moments++_1_pop_stats.csv", sep=",", row.names=F, quote=F)
idx=1
for(i in 1:num_scenarios) {
tmp <- read.table(paste("1-pop_scenario_", idx, "_final_unsorted.txt", sep=""))
momspp[idx,] <- t(tmp[ncol(tmp)])
idx=idx + 1
}
idx
num_scenarios
idx=1
for(i in 1:num_scenarios) {
tmp <- read.table(paste("1-pop_scenario_", idx, "_final_unsorted.txt", sep=""))
momspp[idx,] <- t(tmp[ncol(tmp)])
idx=idx + 1
}
stats <- bind_cols(momspp, params_1_pop)
dat_stats <- pivot_longer(stats, cols=all_of(stats_1_pop), names_to="variable")
View(dat_stats)
py_moments <- read.csv("moments_LD_1_pop_out.csv") # out from python chunk
common_moments <- intersect(names(momspp), names(py_moments))
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$method <- c(rep("moments++", num_scenarios),
rep("moments.LD", num_scenarios))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
full_tbl <- bind_cols(match_moments,
bind_rows(params_1_pop, params_1_pop))
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
names_to="variable")
write.table(dat_matched, "LD_++_1-pop.csv", sep=",", row.names=F, quote=F)
p <- ggplot(data=dat_matched,
aes(x=variable, y=value, color=method))
p <- p + geom_point(size=3) + theme_bw()
p <- p + labs(title="1-Pop moments++ vs moments.LD",
x="Moment", y="Value", shape="Scenario")
p <- p + scale_y_continuous(trans="log10")
p <- p + theme(axis.title=element_text(size=20),
axis.text=element_text(size=14),
axis.text.x=element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position="bottom")
ggsave("moments++_vs_momentsLD_1-pop_all_stats_.png",
p, device="png", width=12, height=12)
p <- ggplot(data=dat_matched,
aes(x=variable, y=value, shape=method))
p <- p + geom_point(size=3) + theme_bw()
p <- p + labs(title="1-Pop moments++ vs moments.LD",
x="Moment", y="Value", shape="Scenario")
p <- p + scale_y_continuous(trans="log10")
p <- p + theme(axis.title=element_text(size=20),
axis.text=element_text(size=14),
axis.text.x=element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position="bottom")
ggsave("moments++_vs_momentsLD_1-pop_all_stats_.png",
p, device="png", width=12, height=12)
# all moments/scenarios together
p <- ggplot(data=dat_matched,
aes(x=variable, y=value, color=method, shape=method))
p <- p + geom_point(size=3) + theme_bw()
p <- p + labs(title="1-Pop moments++ vs moments.LD",
x="Moment", y="Value", shape="Scenario")
p <- p + scale_y_continuous(trans="log10")
p <- p + theme(axis.title=element_text(size=20),
axis.text=element_text(size=14),
axis.text.x=element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position="bottom")
ggsave("moments++_vs_momentsLD_1-pop_all_stats_.png",
p, device="png", width=12, height=12)
getwd()
# all moments/scenarios together
p <- ggplot(data=dat_matched,
aes(x=variable, y=value, color=method, shape=method))
p <- p + geom_point(size=3) + theme_bw()
p <- p + labs(title="1-Pop moments++ vs moments.LD",
x="Moment", y="Value", shape="Scenario")
p <- p + scale_y_continuous(trans="log10")
p <- p + theme(axis.title=element_text(size=20),
axis.text=element_text(size=14),
axis.text.x=element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position="bottom")
ggsave("moments++_vs_momentsLD_1-pop_all_stats.png",
p, device="png", width=12, height=12)
p
p <- ggplot(data=dat_matched,
aes(x=variable, y=value, color=method, shape=method))
p <- p + geom_point(size=3) + theme_bw()
p <- p + labs(title="1-Pop moments++ vs moments.LD",
x="Moment", y="Value", shape="Scenario")
p <- p + scale_y_continuous(trans="log10")
p <- p + scale_shape_manual(values=c(0,1))
p <- p + theme(axis.title=element_text(size=20),
axis.text=element_text(size=14),
axis.text.x=element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position="bottom")
ggsave("moments++_vs_momentsLD_1-pop_all_stats.png",
p, device="png", width=12, height=12)
p
p <- ggplot(data=dat_matched,
aes(x=variable, y=value, color=method, shape=method))
p <- p + geom_point(size=3) + theme_bw()
p <- p + labs(title="1-Pop moments++ vs moments.LD",
x="Moment", y="Value", shape="Scenario")
p <- p + scale_y_continuous(trans="log10")
p <- p + scale_shape_manual(values=c(1,2))
p <- p + theme(axis.title=element_text(size=20),
axis.text=element_text(size=14),
axis.text.x=element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position="bottom")
ggsave("moments++_vs_momentsLD_1-pop_all_stats.png",
p, device="png", width=12, height=12)
p
p <- ggplot(data=dat_matched,
aes(x=variable, y=value, shape=method))
p <- p + geom_point(size=3) + theme_bw()
p <- p + labs(title="1-Pop moments++ vs moments.LD",
x="Moment", y="Value", shape="Scenario")
p <- p + scale_y_continuous(trans="log10")
p <- p + scale_shape_manual(values=c(1,2))
p <- p + theme(axis.title=element_text(size=20),
axis.text=element_text(size=14),
axis.text.x=element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position="bottom")
ggsave("moments++_vs_momentsLD_1-pop_all_stats.png",
p, device="png", width=12, height=12)
p
p <- ggplot(data=dat_matched,
aes(x=variable, y=value, color=method, shape=method))
p <- p + geom_point(size=3) + theme_bw()
p <- p + labs(title="1-Pop moments++ vs moments.LD",
x="Moment", y="Value", shape="Method")
p <- p + scale_y_continuous(trans="log10")
p <- p + scale_shape_manual(values=c(1,2))
p <- p + theme(axis.title=element_text(size=20),
axis.text=element_text(size=14),
axis.text.x=element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position="bottom")
ggsave("moments++_vs_momentsLD_1-pop_all_stats.png",
p, device="png", width=12, height=12)
p
# all moments/scenarios together
p <- ggplot(data=dat_matched,
aes(x=variable, y=value, color=method, shape=method))
p <- p + geom_point(size=3) + theme_bw()
p <- p + labs(title="1-Pop moments++ vs moments.LD",
x="Moment", y="Value")
p <- p + scale_y_continuous(trans="log10")
p <- p + scale_shape_manual(values=c(1,2))
p <- p + theme(axis.title=element_text(size=20),
axis.text=element_text(size=14),
axis.text.x=element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position="bottom")
ggsave("moments++_vs_momentsLD_1-pop_all_stats.png",
p, device="png", width=12, height=12)
p
?print
1e+4/200
1e+4*25
?element_text
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
# for running moments.LD:
library(reticulate)
use_python("/usr/bin/python3")
knitr::opts_knit$set(root.dir="~/Devel/momentspp/benchmarking/")
mu <- 1e-7
N_0 <- c(1e+4, 1e+5)
N_1 <- 1e+5
m_01 <- c(0, 1e-4, 1e-8)
m_10 <- c(1e-4, 1e-12)
num_epochs <- c(1)
num_gen_epoch_2 <- 5000
N_0_epoch_2 <- N_0 / 10
N_1_epoch_2 <- N_1 / 10
params_2_pop <- crossing(num_epochs, mu, r , m_01, m_10, N_0, N_1)
params_2_pop <- mutate(params_2_pop,
N_0_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ (N_0 / 10)))
params_2_pop <- mutate(params_2_pop,
N_1_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ (N_1 / 10)))
params_2_pop <- mutate(params_2_pop,
num_gen_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ 5000))
print(params_2_pop, n=nrow(params_2_pop))
write.csv(params_2_pop, "params_2_pops.csv", sep=",",
quote=F, row.names=F, col.names=T)
py_moments <- read.csv("moments_LD_1_pop_out.csv") # out from python chunk
common_moments <- intersect(names(momspp), names(py_moments))
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$method <- c(rep("moments++", num_scenarios),
rep("moments.LD", num_scenarios))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
full_tbl <- bind_cols(match_moments,
bind_rows(params_1_pop, params_1_pop))
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
names_to="variable") %>% arrange(variable)
write.table(dat_matched, "LD_++_1-pop.csv", sep=",", row.names=F, quote=F)
py_moments <- read.csv("moments_LD_1_pop_out.csv") # out from python chunk
common_moments <- intersect(names(momspp), names(py_moments))
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$method <- c(rep("moments++", num_scenarios),
rep("moments.LD", num_scenarios))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
full_tbl <- bind_cols(match_moments,
bind_rows(params_1_pop, params_1_pop))
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
names_to="variable")
dat_matched$matched_moments <- paste(dat_matched$method,
dat_matched$variable,
sep="_") %>% arrange(matched_moments)
py_moments <- read.csv("moments_LD_1_pop_out.csv") # out from python chunk
common_moments <- intersect(names(momspp), names(py_moments))
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$method <- c(rep("moments++", num_scenarios),
rep("moments.LD", num_scenarios))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
full_tbl <- bind_cols(match_moments,
bind_rows(params_1_pop, params_1_pop))
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
names_to="variable")
dat_matched$matched_moments <- paste(dat_matched$method,
dat_matched$variable,
sep="_")
dat_matched <- arrange(dat_matched, matched_moments)
write.table(dat_matched, "LD_++_1-pop.csv", sep=",", row.names=F, quote=F)
View(dat_matched)
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
names_to="variable")
match_moments
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$method <- c(rep("moments++", num_scenarios),
rep("moments.LD", num_scenarios))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
full_tbl <- bind_cols(match_moments,
bind_rows(params_1_pop, params_1_pop))
View(full_tbl)
dat_matched <- pivot_longer(full_tbl,
#cols=all_of(common_moments),
names_to="variable")
dat_matched <- pivot_longer(full_tbl,
cols=everything(), #all_of(common_moments),
names_to="variable")
dat_matched <- pivot_longer(full_tbl,
cols=c(all_of(common_moments), scenario),
names_to="variable")
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
cols_vary="slowest",
names_to="variable")
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
cols_vary="fastest",
names_to="variable")
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
cols_vary="slowest",
names_to="variable")
full_tbl
full_tbl
full_tbl <- bind_cols(match_moments,
bind_rows(params_1_pop, params_1_pop))
dat_matched$matched_moments <- paste(dat_matched$variable,
dat_matched$scenario,
dat_matched$method,
sep="_")
full_tbl <- bind_cols(match_moments,
bind_rows(params_1_pop, params_1_pop))
full_tbl$matched_moments <- paste(dat_matched$variable,
dat_matched$scenario,
dat_matched$method,
sep="_")
full_tbl$matched_moments <- paste(full_tbl$variable,
full_tbl$scenario,
full_tbl$method,
sep="_")
full_tbl <- bind_cols(match_moments,
bind_rows(params_1_pop, params_1_pop))
full_tbl$sep_moments <- paste(full_tbl$scenario, full_tbl$method,sep="_")
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
cols_vary="slowest",
names_to="variable")
View(full_tbl)
dat_matched$matched_moments <- paste(dat_matched$variable,
dat_matched$sep_moments,
sep="_")
common_moments <- intersect(names(momspp), names(py_moments))
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$method <- c(rep("moments++", num_scenarios),
rep("moments.LD", num_scenarios))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
full_tbl <- bind_cols(match_moments,
bind_rows(params_1_pop, params_1_pop))
full_tbl$sep_moments <- paste(full_tbl$method, full_tbl$scenario, sep="_")
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
cols_vary="slowest",
names_to="variable")
dat_matched$matched_moments <- paste(dat_matched$variable,
dat_matched$sep_moments,
sep="_")
dat_matched <- arrange(dat_matched, matched_moments)
common_moments <- intersect(names(momspp), names(py_moments))
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$method <- c(rep("moments++", num_scenarios),
rep("moments.LD", num_scenarios))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
full_tbl <- bind_cols(match_moments,
bind_rows(params_1_pop, params_1_pop))
full_tbl$sep_moments <- paste(full_tbl$scenario, full_tbl$method, sep="_")
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
cols_vary="slowest",
names_to="variable")
dat_matched$matched_moments <- paste(dat_matched$variable,
dat_matched$sep_moments,
sep="_")
dat_matched <- arrange(dat_matched, matched_moments)
dat_matched <- arrange(dat_matched, matched_moments, scenario)
dat_matched <- arrange(dat_matched, matched_moments, as.numeric(scenario))
common_moments <- intersect(names(momspp), names(py_moments))
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$method <- c(rep("moments++", num_scenarios),
rep("moments.LD", num_scenarios))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
full_tbl <- bind_cols(match_moments,
bind_rows(params_1_pop, params_1_pop))
# following lines help visualization in raw table
full_tbl$sep_moments <- paste(full_tbl$scenario, full_tbl$method, sep="_")
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
names_to="variable")
dat_matched$matched_moments <- paste(dat_matched$variable,
dat_matched$sep_moments,
sep="_")
dat_matched <- arrange(dat_matched, matched_moments, as.numeric(scenario))
class(dat_matched$scenario
class(dat_matched$scenario)
dat_matched <- arrange(dat_matched, scenario, matched_moments)
dat_matched <- select(dat_matched, -c(sep_moments, matched_moments))
py_moments <- read.csv("moments_LD_2_pops_out.csv") # out from python chunk
common_moments <- intersect(names(momspp), names(py_moments))
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$method <- c(rep("moments++", num_scenarios),
rep("moments.LD", num_scenarios))
full_tbl <- bind_cols(match_moments,
bind_rows(params_2_pop, params_2_pop))
momspp
View(match_moments)
params_2_pops <- read.csv("params_2_pops.csv", header=T, sep=",")
num_scenarios <- nrow(params_2_pops)
# extracting names of moments
stats_2_pops <- read.table("2-pops_scenario_1_final_unsorted.txt")[,1]
suffixes <- c("A", "B", "X") # from sorting in moments++
# convert to unsorted moments as presented in moments.LD
for(i in 1:length(suffixes)) {
stats_2_pops <- str_remove(stats_2_pops, paste("_", suffixes[i], sep=""))
}
num_stats <- length(stats_2_pops)
momspp <- as_tibble(matrix(nrow=num_scenarios, ncol=num_stats), .name_repair="unique")
names(momspp) <- stats_2_pops
idx=1
for(i in 1:num_scenarios) {
tmp <- read.table(paste("2-pops_scenario_", idx, "_final_unsorted.txt", sep=""))
momspp[idx,] <- t(tmp[ncol(tmp)])
idx=idx + 1
}
stats <- bind_cols(momspp, params_2_pops)
write.table(momspp, "moments++_2_pops_stats.csv", sep=",", row.names=F, quote=F)
dat_stats <- pivot_longer(stats, cols=all_of(stats_2_pops), names_to="variable")
# 1-epoch plot
p <- ggplot(data=filter(dat_stats, num_epochs==1),
aes(x=variable, y=value, shape=as.factor(r)))
p <- p + geom_point(size=5) + theme_bw() + facet_grid(N_0~m_01)
p <- p + scale_shape_manual(values=c(1, 2))
p <- p + labs(title = "1-Epoch Moments x N_0 (rows) and m_01 (cols)",
x="Moment", y="Value", shape="r")
p <- p + scale_y_continuous(trans="log10")
p <- p + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position = "bottom")
p
p
ggsave("moments++_2_pops_1_epoch.png", p, device="png", width=12, height=12)
p
ggsave("moments++_2_pops_1_epoch.png", p, device="png", width=12, height=12)
# two epochs plot
p <- ggplot(data=filter(dat_stats, num_epochs==2),
aes(x=variable, y=value, shape=as.factor(r)))
p <- p + geom_point(size=5) + theme_bw() + facet_grid(N_0~m_01)
p <- p + scale_shape_manual(values=c(1, 2))
p <- p + scale_shape_manual(values=c(1, 2))
p <- p + labs(title="2-Epoch Moments x N_0 (rows) and m_01 (cols)",
x="Moment", y="Value", shape="r")
p <- p + scale_y_continuous(trans="log10")
p <- p + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position="bottom")
p
py_moments <- read.csv("moments_LD_2_pops_out.csv") # out from python chunk
common_moments <- intersect(names(momspp), names(py_moments))
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$method <- c(rep("moments++", num_scenarios),
rep("moments.LD", num_scenarios))
full_tbl <- bind_cols(match_moments,
bind_rows(params_2_pop, params_2_pop))
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
names_to="variable")
View(dat_matched)
dat_matched
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
# for running moments.LD:
library(reticulate)
use_python("/usr/bin/python3")
knitr::opts_knit$set(root.dir="~/Devel/momentspp/benchmarking/")
r <- c(1e-8, 1e-7, 1e-6)
mu <- c(1e-8, 1e-7, 1e-6)
N <- c(1e+3, 1e+4, 1e+5)
params_1_pop <- crossing(N, mu, r) %>% arrange(N, mu, r)
print(params_1_pop, n=nrow(params_1_pop))
write.csv(params_1_pop, "input/params_1_pop.csv", quote=F, sep=",", row.names=F)
mu <- 1e-7
r <- c(0, 1e-6)
N_0 <- c(1e+4, 1e+5)
N_1 <- 1e+5
m_01 <- c(0, 1e-4)
m_10 <- c(1e-4, 1e-8, 1e-12)
num_epochs <- c(1)
num_gen_epoch_2 <- 5000
N_0_epoch_2 <- N_0 / 10
N_1_epoch_2 <- N_1 / 10
params_2_pop <- crossing(num_epochs, mu, r , m_01, m_10, N_0, N_1)
params_2_pop <- mutate(params_2_pop,
N_0_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ (N_0 / 10)))
params_2_pop <- mutate(params_2_pop,
N_1_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ (N_1 / 10)))
params_2_pop <- mutate(params_2_pop,
num_gen_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ 5000))
print(params_2_pop, n=nrow(params_2_pop))
write.csv(params_2_pop, "input/params_2_pops.csv", sep=",",
quote=F, row.names=F, col.names=T)
reticulate::repl_python()
