py_moms$admix <- as.numeric(py_moms$admix)
py_moms$no_admix <- as.numeric(py_moms$no_admix)
py_moms$ratio <- py_moms$admix / py_moms$no_admix
molten_py <- pivot_longer(py_moms, cols="ratio")
nrows(momspp)
nrow(momspp)
models <- head(models, - 6)
View(models)
getwd()
setwd("~")
knitr::opts_chunk$set(echo=TRUE)
library(tidyverse)
library(cowplot)
# for running moments.LD:
library(reticulate)
use_python("/usr/bin/python3")
knitr::opts_knit$set(root.dir="~/Devel/momentspp/benchmarking/")
momspp <- bind_cols(mpp_m1, mpp_m2, mpp_m3, mpp_m4)
# 3-populations (models 1-4)
mpp_m1 <- read.table("model_1_expectations.txt") %>% select(!V2)
mpp_m2 <- read.table("model_2_expectations.txt") %>% select(!V2)
mpp_m3 <- read.table("model_3_expectations.txt") %>% select(!V2)
mpp_m4 <- read.table("model_4_expectations.txt") %>% select(!V2)
momspp <- bind_cols(mpp_m1, mpp_m2, mpp_m3, mpp_m4)
View(momspp)
# 3-populations (models 1-4)
mpp_m1 <- read.table("model_1_expectations.txt") %>% select(!V2)
mpp_m2 <- read.table("model_2_expectations.txt") %>% select(V3)
mpp_m3 <- read.table("model_3_expectations.txt") %>% select(V3)
mpp_m4 <- read.table("model_4_expectations.txt") %>% select(V3)
momspp <- bind_cols(mpp_m1, mpp_m2, mpp_m3, mpp_m4)
names(momspp) <- c("stat", "m1++", "m2++", "m3++", "m4++")
momspp <- momspp[-31,]
momspp <- slice(momspp, 1:24, 31:52, 25:30) # re-orders rows to match moments.LD
py_m1 <- read.csv("moments_LD_model_1.csv")
py_m2 <- read.csv("moments_LD_model_2.csv")
py_m3 <- read.csv("moments_LD_model_3.csv")
py_m4 <- read.csv("moments_LD_model_4.csv")
py_moms <- as_tibble(cbind(names(py_m1), t(bind_rows(py_m1, py_m2, py_m3, py_m4))))
View(py_moms)
names(py_moms) <- c("stat", "m1py", "m2py", "m3py", "m4py")
class(py_moms$m2py)
?select
models <- bind_cols(momspp, select(py_moms, starts_with("m")))
View(models)
ratios <- select(momspp, starts_with("m")) / select(py_moms, starts_with("m"))
type_convert(py_moms)
py_moms <- type_convert(py_moms)
ratios <- select(momspp, starts_with("m")) / select(py_moms, starts_with("m"))
ratios
ratios <- bind_cols(momspp$stat, ratios)
View(ratios)
names(ratios) <- c("stat", "m1", "m2", "m3", "m4")
molten_ratios <- pivot_longer(ratios, cols=starts_with("m"))
molten_ratios <- pivot_longer(ratios, cols=starts_with("m"))
r <- ggplot(data=molten_ratios, aes(x=stat, y=value, shape=name))
r <- r + geom_point(size=3) + theme_bw()
r <- r + labs(title="++ / LD", x="Moment", y="Ratio", shape="Model")
r <- r + scale_shape_manual(values=c(1, 2, 3, 4))
r <- r + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position="bottom")
r
save_plot("ratios_1-4.pdf", p1, base_height=12, base_width=12)
molten_ratios <- pivot_longer(ratios, cols=starts_with("m"))
p1 <- ggplot(data=molten_ratios, aes(x=stat, y=value, shape=name))
p1 <- p1 + geom_point(size=3) + theme_bw()
p1 <- p1 + labs(title="++ / LD", x="Moment", y="Ratio", shape="Model")
p1 <- p1 + scale_shape_manual(values=c(0, 1, 2, 3))
p1 <- p1 + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position="bottom")
p1
save_plot("ratios_1-4.pdf", p1, base_height=12, base_width=12)
# 4-populations (models m5-m6)
mpp_m5 <- read.table("model_5_expectations.txt") %>% select(!V2)
mpp_m6 <- read.table("model_6_expectations.txt") %>% select(V3)
momspp <- bind_cols(mpp_m5, mpp_m6)
names(momspp) <- c("stat", "m5++", "m6++")
momspp <- momspp[-31,] # deletes dummy moment I
momspp <- bind_cols(mpp_m5, mpp_m6)
names(momspp) <- c("stat", "m5++", "m6++")
momspp <- momspp[-61,] # deletes dummy moment I
momspp <- slice(momspp, 1:50, 61:115, 51:60) # re-orders rows to match moments.LD
momspp <- bind_cols(mpp_m5, mpp_m6)
names(momspp) <- c("stat", "m5++", "m6++")
momspp <- momspp[-61,] # deletes dummy moment I
momspp <- slice(momspp, 1:50, 61:115, 51:60) # re-orders rows to match moments.LD
py_m5 <- read.csv("moments_LD_model_5.csv")
py_m6 <- read.csv("moments_LD_model_6.csv")
py_moms <- as_tibble(cbind(names(py_m5), t(bind_rows(py_m5, py_m6))))
names(py_moms) <- c("stat", "m5py", "m6py")
py_moms <- type_convert(py_moms)
ratios <- select(momspp, starts_with("m")) / select(py_moms, starts_with("m"))
ratios <- bind_cols(momspp$stat, ratios)
names(ratios) <- c("stat", "m5", "m6")
molten_ratios <- pivot_longer(ratios, cols=starts_with("m"))
p2 <- ggplot(data=molten_ratios, aes(x=stat, y=value, shape=name))
p2 <- p2 + geom_point(size=3) + theme_bw()
p2 <- p2 + labs(title="++ / LD", x="Moment", y="Ratio", shape="Model")
p2 <- p2 + scale_shape_manual(values=c(0, 1))
p2 <- p2 + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position="bottom")
p2
p2
save_plot("ratios_5-6.pdf", p2, base_height=12, base_width=12)
?geom_line
View(ratios)
knitr::opts_chunk$set(echo=TRUE)
library(tidyverse)
library(cowplot)
library(stringr)
# for running moments.LD:
library(reticulate)
use_python("/usr/bin/python3")
knitr::opts_knit$set(root.dir="~/Devel/momentspp/benchmarking/")
ratios$count_4 <- str_count(ratios$stat, "4")
molten_ratios <- pivot_longer(ratios, cols=starts_with("m"))
View(molten_ratios)
ratios$count_4 <- as.factor(str_count(ratios$stat, "4"))
molten_ratios <- pivot_longer(ratios, cols=starts_with("m"))
p2 <- ggplot(data=molten_ratios, aes(x=stat, y=value, shape=name, color=count_4))
p2 <- p2 + geom_point(size=3) + theme_bw()
p2 <- p2 + geom_hline(yintercept=0.99, linetype=2)
p2 <- p2 + geom_hline(yintercept=1.01, linetype=2)
p2 <- p2 + labs(title="++ / LD", x="Moment", y="Ratio", shape="Model")
p2 <- p2 + scale_shape_manual(values=c(0, 1))
p2 <- p2 + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position="bottom")
p2
(125*3+50) / (211*3)
370/211
169/211
getwd()
momspp <- read.table("~/Devel/momentspp/debug/model_7_expectations.txt") %>% select(!V2)
names(momspp) <- c("stat", "m7++")
View(momspp)
momspp <- momspp[-106,] # deletes dummy moment I
momspp <- read.table("~/Devel/momentspp/debug/model_7_expectations.txt") %>% select(!V2)
names(momspp) <- c("stat", "m7++")
momspp <- slice(momspp, 1:90, 107:226, 91:105) # re-orders rows to match moments.LD
# 5 sampled populations (model m7)
momspp <- read.table("model_7_expectations.txt") %>% select(!V2)
names(momspp) <- c("stat", "m7++")
momspp <- slice(momspp, 1:90, 107:226, 91:105) # to match moments.LD
py_moms <- read.csv("moments_LD_model_7.csv")
names(py_moms) <- c("stat", "m7py")
py_moms <- type_convert(py_moms)
View(py_moms)
py_moms <- t(read.csv("moments_LD_model_7.csv"))
names(py_moms) <- "m7py"
names(py_moms) <- "m7py"
py_moms <- as_tibble(t(read.csv("moments_LD_model_7.csv")))
names(py_moms) <- "m7py"
class(py_moms$m7py)
ratios <- select(momspp, starts_with("m")) / select(py_moms, starts_with("m"))
ratios <- bind_cols(momspp$stat, ratios)
names(ratios) <- c("stat", "m7")
molten_ratios <- pivot_longer(ratios, cols=starts_with("m"))
p3 <- ggplot(data=molten_ratios, aes(x=stat, y=value))
p3 <- p3 + geom_point(size=3) + theme_bw()
p3 <- p3 + geom_hline(yintercept=0.99, linetype=2)
p3 <- p3 + geom_hline(yintercept=1.01, linetype=2)
p3 <- p3 + labs(title="++ / LD", x="Moment", y="Ratio")
p3 <- p3 + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position="bottom")
p3
save_plot("ratios_7.pdf", p3, base_height=18, base_width=18)
getwd()
1/6000
# 3 sampled populations (models m1-m4 & m8-m11)
mpp_m1 <- read.table("model_1_expectations.txt") %>% select(!V2)
mpp_m2 <- read.table("model_2_expectations.txt") %>% select(V3)
0.000886865 / 0.00195825
5/11
knitr::opts_chunk$set(echo=TRUE)
library(tidyverse)
library(cowplot)
library(stringr)
# for running moments.LD:
library(reticulate)
use_python("/usr/bin/python3")
knitr::opts_knit$set(root.dir="~/Devel/momentspp/benchmarking/")
# 3 pop models
mpp <- as.data.frame(matrix(nrow=52, ncol=num_models))
num_models <- 12
# 3 pop models
mpp <- as.data.frame(matrix(nrow=52, ncol=num_models))
getwd()
setwd("Devel/momentspp/benchmarking")
# 3 pop models
mpp <- as.data.frame(matrix(nrow=51, ncol=num_models))
for(i in 1:num_models) {
mpp[,i] <- read.table(paste("steady_state/model_", i, "_steady_state.txt", sep=""))[-31]
}
i
read.table(paste("steady_state/model_", i, "_steady_state.txt", sep=""))
read.table(paste("/steady_state/model_", i, "_steady_state.txt", sep=""))
# 3 pop models
mpp <- as.data.frame(matrix(nrow=51, ncol=num_models))
for(i in 1:num_models) {
mpp[,i] <- read.table(paste("/steady_state/model_", i, "_steady_state.txt", sep=""))[-31]
}
for(i in 1:num_models) {
mpp[,i] <- read.table(paste("steady_state/model_", i, "_steady_state.txt", sep=""))[-31]
}
View(mpp)
read.table(paste("steady_state/model_", i, "_steady_state.txt", sep=""))[-31]
read.table(paste("steady_state/model_", i, "_steady_state.txt", sep=""))
read.table(paste("steady_state/model_", i, "_steady_state.txt", sep=""))[-1]
read.table(paste("steady_state/model_", i, "_steady_state.txt", sep=""))[-1]
read.table(paste("steady_state/model_", i, "_steady_state.txt", sep=""))
# 3 pop models
mpp <- as.data.frame(matrix(nrow=51, ncol=num_models))
for(i in 1:num_models) {
mpp[,i] <- read.table(paste("steady_state/model_", i, "_steady_state.txt", sep=""))
}
mpp <- mpp[-31,]
num_models <- 12
# 3 pop models
mpp <- as.data.frame(matrix(nrow=51, ncol=num_models))
for(i in 1:num_models) {
mpp[,i] <- read.table(paste("steady_state/model_", i, "_steady_state.txt", sep=""))
}
mpp <- mpp[-31,]
# 3 sampled populations
num_models <- 12
mpp <- as.data.frame(matrix(nrow=51, ncol=num_models))
for(i in 1:num_models) {
mpp[,i] <- read.table(paste("expect/steady_state/model_", i, "_expectations.txt", sep="")) %>% select(V3)
}
getwd()
# 3 sampled populations
num_models <- 12
mpp <- as.data.frame(matrix(nrow=51, ncol=num_models))
for(i in 1:num_models) {
mpp[,i] <- read.table(paste("/expect/steady_state/model_", i, "_expectations.txt", sep="")) %>% select(V3)
}
for(i in 1:num_models) {
mpp[,i] <- read.table(paste("expect/model_", i, "_expectations.txt", sep="")) %>% select(V3)
}
mpp
View(mpp)
# 3 sampled populations
num_models <- 12
names <- character(length=num_models)
mpp <- as.data.frame(matrix(nrow=51, ncol=num_models))
for(i in 1:num_models) {
names[i] <- paste("m", i, "++")
mpp[,i] <- read.table(paste("expect/model_", i, "_expectations.txt", sep="")) %>% select(V3)
}
names(momspp) <- names
names
for(i in 1:num_models) {
names[i] <- paste("m", i, "++", sep="")
mpp[,i] <- read.table(paste("expect/model_", i, "_expectations.txt", sep="")) %>% select(V3)
}
names(momspp) <- names
names
momspp
names(mpp) <- names
mpp <- slice(mpp, 1:24, 32:52, 25:30) # re-orders rows to match moments.LD
names <- character(length=num_models)
py <- as.data.frame(matrix(nrow=51, ncol=num_models))
for(i in 1:num_models) {
names[i] <- paste("m", i, "++", sep="")
py[,i] <- read.csv("moments_LD_model_1.csv")
}
num_models
for(i in 1:num_models) {
names[i] <- paste("m", i, "++", sep="")
py[,i] <- read.csv(paste("expect/moments_LD_model_", i, ".csv", sep=""))
}
py
View(py)
names <- character(length=num_models)
py <- as.data.frame(matrix(nrow=51, ncol=num_models))
for(i in 1:num_models) {
names[i] <- paste("m", i, "++", sep="")
py[i,] <- read.csv(paste("expect/moments_LD_model_", i, ".csv", sep=""))
}
names <- character(length=num_models)
py <- as.data.frame(matrix(nrow=num_models, ncol=51))
for(i in 1:num_models) {
names[i] <- paste("m", i, "++", sep="")
py[i,] <- read.csv(paste("expect/moments_LD_model_", i, ".csv", sep=""))
}
py <- as_tibble(t(py))
py <- as_tibble(t(py))
names(py) <- names
py <- type_convert(py)
names <- character(length=num_models)
py <- as.data.frame(matrix(nrow=num_models, ncol=51))
for(i in 1:num_models) {
names[i] <- paste("py", i, sep="")
py[i,] <- read.csv(paste("expect/moments_LD_model_", i, ".csv", sep=""))
}
py <- as_tibble(t(py))
names(py) <- names
py <- type_convert(py)
ratios <- select(mpp, starts_with("m")) / select(py, starts_with("py"))
# 3 sampled populations
num_models <- 12
names <- character(length=num_models)
mpp <- as.data.frame(matrix(nrow=51, ncol=num_models))
for(i in 1:num_models) {
names[i] <- paste("m", i, "++", sep="")
mpp[,i] <- read.table(paste("expect/model_", i, "_expectations.txt", sep="")) %>% select(V3)
}
names(mpp) <- names
# 3 sampled populations
num_models <- 12
names <- character(length=num_models)
mpp <- as.data.frame(matrix(nrow=52, ncol=num_models))
for(i in 1:num_models) {
names[i] <- paste("m", i, "++", sep="")
mpp[,i] <- read.table(paste("expect/model_", i, "_expectations.txt", sep="")) %>% select(V3)
}
names(mpp) <- names
mpp <- slice(mpp, 1:24, 32:52, 25:30) # re-orders rows to match moments.LD
names <- character(length=num_models)
py <- as.data.frame(matrix(nrow=num_models, ncol=51))
for(i in 1:num_models) {
names[i] <- paste("py", i, sep="")
py[i,] <- read.csv(paste("expect/moments_LD_model_", i, ".csv", sep=""))
}
py <- as_tibble(t(py))
names(py) <- names
py <- type_convert(py)
ratios <- select(mpp, starts_with("m")) / select(py, starts_with("py"))
ratios <- bind_cols(momspp$stat, ratios)
View(ratios)
paste("m", 1"12")
paste("m", 1:12)
names(ratios) <- paste("m", 1:12, sep="")
molten_ratios <- pivot_longer(ratios, cols=c("m1", "m8", "m12"))#cols=starts_with("m"))
p1 <- ggplot(data=molten_ratios, aes(x=stat, y=value, shape=name)
p1 <- p1 + geom_hline(yintercept=0.99, linetype=2)
p1 <- p1 + geom_hline(yintercept=1.01, linetype=2)
p1 <- p1 + labs(title="++ / LD", x="Moment", y="Ratio", shape="Model")
molten_ratios <- pivot_longer(ratios, cols=c("m1", "m8", "m12"))#cols=starts_with("m"))
p1 <- ggplot(data=molten_ratios, aes(x=stat, y=value, shape=name)
View(molten_ratios)
molten_ratios <- pivot_longer(ratios, cols=c("m1", "m8", "m12"))#cols=starts_with("m"))
p1 <- ggplot(data=molten_ratios, aes(x=1:51, y=value, shape=name)
p1 <- p1 + geom_hline(yintercept=0.99, linetype=2)
p1 <- p1 + geom_hline(yintercept=1.01, linetype=2)
molten_ratios <- pivot_longer(ratios, cols=c("m1", "m8", "m12"))#cols=starts_with("m"))
p1 <- ggplot(data=molten_ratios, aes(x=1:51, y=value, shape=name)
molten_ratios <- pivot_longer(ratios, cols=c("m1", "m8", "m12"))#cols=starts_with("m"))
p1 <- ggplot(data=molten_ratios, aes(x=1:51, y=value, shape=name))
molten_ratios <- pivot_longer(ratios, cols=c("m1", "m8", "m12"))#cols=starts_with("m"))
p1 <- ggplot(data=molten_ratios, aes(x=1:51, y=value, shape=name))
p1 <- p1 + geom_point(size=3) + theme_bw()
p1 <- p1 + geom_hline(yintercept=0.99, linetype=2)
p1 <- p1 + geom_hline(yintercept=1.01, linetype=2)
p1 <- p1 + labs(title="++ / LD", x="Moment", y="Ratio", shape="Model")
p1 <- p1 + scale_shape_manual(values=(0:11))
p1 <- p1 + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position="bottom")
p1
ratios$stat <- 1:51
molten_ratios <- pivot_longer(ratios, cols=c("m1", "m8", "m12"))#cols=starts_with("m"))
p1 <- ggplot(data=molten_ratios, aes(x=stat, y=value, shape=name))
p1 <- p1 + geom_point(size=3) + theme_bw()
p1 <- p1 + geom_hline(yintercept=0.99, linetype=2)
p1 <- p1 + geom_hline(yintercept=1.01, linetype=2)
p1 <- p1 + labs(title="++ / LD", x="Moment", y="Ratio", shape="Model")
p1 <- p1 + scale_shape_manual(values=(0:11))
p1 <- p1 + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position="bottom")
p1
getwd()
num_models <- 12
# 3 pop models
mpp <- as.data.frame(matrix(nrow=51, ncol=num_models))
for(i in 1:num_models) {
mpp[,i] <- read.table(paste("steady_state/model_", i, "_steady_state.txt", sep=""))
}
View(mpp)
names(mpp) <- paste("m", 1:num_models, sep="")
# 3 sampled populations
num_models <- 12
mpp <- as.data.frame(matrix(nrow=52, ncol=num_models))
for(i in 1:num_models) {
mpp[,i] <- read.table(paste("expect/model_", i, "_expectations.txt", sep="")) %>% select(V3)
}
names(mpp) <- paste("m++", 1:num_models, sep="")
mpp <- slice(mpp, 1:24, 32:52, 25:30) # re-orders rows to match moments.LD
py <- as.data.frame(matrix(nrow=num_models, ncol=51))
for(i in 1:num_models) {
py[i,] <- read.csv(paste("expect/moments_LD_model_", i, ".csv", sep=""))
}
py <- as_tibble(t(py))
names(py) <- paste("py_", 1:num_models, sep="")
py <- type_convert(py)
ratios <- select(mpp, starts_with("m")) / select(py, starts_with("py"))
names(ratios) <- paste("m", 1:num_models, sep="")
ratios$stat <- 1:51
molten_ratios <- pivot_longer(ratios, cols=starts_with("m"))
p1 <- ggplot(data=molten_ratios, aes(x=stat, y=value, shape=name))
p1 <- p1 + geom_point(size=3) + theme_bw()
p1 <- p1 + geom_hline(yintercept=0.99, linetype=2)
p1 <- p1 + geom_hline(yintercept=1.01, linetype=2)
p1 <- p1 + labs(title="++ / LD", x="Moment", y="Ratio", shape="Model")
p1 <- p1 + scale_shape_manual(values=(0:11))
p1 <- p1 + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position="bottom")
p1
# 4 sampled populations (models m5-m6)
mpp_m5 <- read.table("expect/model_13_expectations.txt") %>% select(!V2)
mpp_m6 <- read.table("expect/model_14_expectations.txt") %>% select(V3)
momspp <- bind_cols(mpp_m5, mpp_m6)
names(momspp) <- c("stat", "m5++", "m6++")
View(momspp)
momspp <- slice(momspp, 1:50, 62:115, 51:60) # re-orders rows to match moments.LD
py_m5 <- read.csv("moments_LD_model_5.csv")
# 4 sampled populations (models m5-m6)
mpp_m13 <- read.table("expect/model_13_expectations.txt") %>% select(!V2)
mpp_m14 <- read.table("expect/model_14_expectations.txt") %>% select(V3)
momspp <- bind_cols(mpp_m13, mpp_m14)
names(momspp) <- c("stat", "m13++", "m14++")
momspp <- slice(momspp, 1:50, 62:115, 51:60) # re-orders rows to match moments.LD
py_m13 <- read.csv("expect/moments_LD_model_13.csv")
py_m14 <- read.csv("expect/moments_LD_model_14.csv")
py_moms <- as_tibble(cbind(names(py_m13), t(bind_rows(py_m13, py_m14))))
names(py_moms) <- c("stat", "m13py", "m14py")
py_moms <- type_convert(py_moms)
ratios <- select(momspp, starts_with("m")) / select(py_moms, starts_with("m"))
py_moms
View(py_moms)
class(py_moms)
class(momspp)
select(momspp, starts_with("m"))
select(py_moms, starts_with("m"))
ratios <- select(momspp, starts_with("m")) / select(py_moms, starts_with("m"))
nrow(momspp)
nrow(py_moms)
3
# 4 sampled populations (models m5-m6)
mpp_m13 <- read.table("expect/model_13_expectations.txt") %>% select(!V2)
mpp_m14 <- read.table("expect/model_14_expectations.txt") %>% select(V3)
momspp <- bind_cols(mpp_m13, mpp_m14)
names(momspp) <- c("stat", "m13++", "m14++")
nrow(momspp)
momspp <- slice(momspp, 1:50, 62:116, 51:60) # re-orders rows to match moments.LD
py_m13 <- read.csv("expect/moments_LD_model_13.csv")
py_m14 <- read.csv("expect/moments_LD_model_14.csv")
py_moms <- as_tibble(cbind(names(py_m13), t(bind_rows(py_m13, py_m14))))
names(py_moms) <- c("stat", "m13py", "m14py")
py_moms <- type_convert(py_moms)
ratios <- select(momspp, starts_with("m")) / select(py_moms, starts_with("m"))
ratios <- bind_cols(momspp$stat, ratios)
names(ratios) <- c("stat", "m13", "m14")
molten_ratios <- pivot_longer(ratios, cols=starts_with("m"))
p2 <- ggplot(data=molten_ratios, aes(x=stat, y=value, shape=name))
p2 <- p2 + geom_point(size=3) + theme_bw()
p2 <- p2 + geom_hline(yintercept=0.99, linetype=2)
p2 <- p2 + geom_hline(yintercept=1.01, linetype=2)
p2 <- p2 + labs(title="++ / LD", x="Moment", y="Ratio", shape="Model")
p2 <- p2 + scale_shape_manual(values=c(0, 1))
p2 <- p2 + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position="bottom")
p2
# 5 sampled populations (model m7)
momspp <- read.table("model_15_expectations.txt") %>% select(!V2)
# 5 sampled populations (model m7)
momspp <- read.table("expect/model_15_expectations.txt") %>% select(!V2)
names(momspp) <- c("stat", "m15++")
momspp <- slice(momspp, 1:90, 107:226, 91:105) # to match moments.LD
py_moms <- as_tibble(t(read.csv("expect/moments_LD_model_15.csv")))
names(py_moms) <- "m7py"
names(py_moms) <- "m15py"
ratios <- select(momspp, starts_with("m")) / select(py_moms, starts_with("m"))
ratios <- bind_cols(momspp$stat, ratios)
names(ratios) <- c("stat", "m15")
molten_ratios <- pivot_longer(ratios, cols=starts_with("m"))
p3 <- ggplot(data=molten_ratios, aes(x=stat, y=value))
p3 <- p3 + geom_point(size=3) + theme_bw()
p3 <- p3 + geom_hline(yintercept=0.99, linetype=2)
p3 <- p3 + geom_hline(yintercept=1.01, linetype=2)
p3 <- p3 + labs(title="++ / LD", x="Moment", y="Ratio")
p3 <- p3 + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position="bottom")
p3
num_models <- 12
# 3 pop models
mpp <- as.data.frame(matrix(nrow=51, ncol=num_models))
for(i in 1:num_models) {
mpp[,i] <- read.table(paste("steady_state/model_", i, "_steady_state.txt", sep=""))
}
mpp <- mpp[-31,] # deletes dummy moment
names(mpp) <- paste("m", 1:num_models, sep="")
reticulate::repl_python()
