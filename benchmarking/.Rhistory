m_01 <- c(0, 1e-4)
m_10 <- 1e-4
num_epochs <- c(1, 2)
num_gen_epoch_2 <- 5000
N_0_epoch_2 <- N_0 / 10
N_1_epoch_2 <- N_1 / 10
params_2_pop <- crossing(num_epochs, mu, r , m_01, m_10, N_0, N_1)
params_2_pop <- mutate(params_2_pop, N_0_epoch_2 = case_when(num_epochs == 1 ~ NA_real_, num_epochs == 2 ~ (N_0 / 10)))
params_2_pop <- mutate(params_2_pop, N_1_epoch_2 = case_when(num_epochs == 1 ~ NA_real_, num_epochs == 2 ~ (N_1 / 10)))
params_2_pop <- mutate(params_2_pop, num_gen_epoch_2 = case_when(num_epochs == 1 ~ NA_real_, num_epochs == 2 ~ 5000))
params_2_pop
1e+4 * 27
reticulate::repl_python()
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(matlib)
library(tidyverse)
library(scales)
library(reticulate)
knitr::opts_knit$set(root.dir = "~/Devel/momentspp/benchmarking/", engine.opts = list(bash = "-l"))
reticulate::repl_python()
install.packages("lubridate")
library(matlib)
library(tidyverse)
library(scales)
library(reticulate)
use_python("/usr/bin/python3")
knitr::opts_knit$set(root.dir="~/Devel/momentspp/benchmarking/")
r <- c(1e-8, 1e-7, 1e-6)
mu <- c(1e-8, 1e-7, 1e-6)
N <- c(1e+3, 1e+4, 1e+5)
params_1_pop <- crossing(N, mu, r) %>% arrange(N, mu, r)
write.csv(params_1_pop, "params_1_pop.csv", quote=F, sep=",", row.names=F)
mu <- 1e-7
r <- c(0, 1e-6)
N_0 <- c(1e+4, 1e+5)
N_1 <- 1e+5
m_01 <- c(0, 1e-4)
m_10 <- 1e-4
num_epochs <- c(1, 2)
num_gen_epoch_2 <- 5000
N_0_epoch_2 <- N_0 / 10
N_1_epoch_2 <- N_1 / 10
params_2_pop <- crossing(num_epochs, mu, r , m_01, m_10, N_0, N_1)
params_2_pop <- mutate(params_2_pop,
N_0_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ (N_0 / 10)))
params_2_pop <- mutate(params_2_pop,
N_1_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ (N_1 / 10)))
params_2_pop <- mutate(params_2_pop,
num_gen_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ 5000))
write.csv(params_2_pop, "params_2_pops.csv", sep=",",
quote=F, row.names=F, col.names=T)
params_1_pop <- read.csv("params_1_pop.csv", header=T, sep=",")
num_scenarios <- nrow(params_1_pop)
num_scenarios
# extracting names of moments
stats_1_pop <- read.table("1-pop_scenario_1_final_unsorted.txt")[,1]
suffixes <- c("A", "B", "X") # from sorting in moments++ (SumStatsLibrary class)
# convert to unsorted moments as presented in moments.LD
for(i in 1:length(suffixes)) {
stats_1_pop <- str_remove(stats_1_pop, paste("_", suffixes[i], sep=""))
}
num_stats <- length(stats_1_pop)
num_stats
stats_1_pop
momspp <- as_tibble(matrix(nrow=num_scenarios, ncol=num_stats), .name_repair="unique")
names(momspp) <- stats_1_pop
momspp
idx=1
for(i in 1:num_scenarios) {
tmp <- read.table(paste("1-pop_scenario_", idx, "_final_unsorted.txt", sep=""))
momspp[idx,] <- t(tmp[ncol(tmp)])
idx=idx + 1
}
stats <- bind_cols(momspp, params_1_pop)
stats
View(stats)
dat_stats <- pivot_longer(stats, cols=all_of(stats_1_pop), names_to="variable")
p <- ggplot(data=dat_stats, aes(x=variable, y=value, shape=as.factor(N)))
p <- p + geom_point(size=5) + theme_bw() + facet_grid(r~mu)
p <- p + scale_shape_manual(values=c(0, 1, 2, 3, 4))
p <- p + scale_y_continuous(trans="log10")
p <- p + labs(title="1-Pop Moments x r (rows) and u (cols)",
x="Moment", y="Value", shape="N")
p <- p + theme(axis.title=element_text(size=20),
axis.text=element_text(size=14),
axis.text.x=element_text(angle=90, vjust=0.5, hjust=1),
legend.position="bottom")
ggsave("moments++_1_pop.png", p, device="png", width=12, height=12)
py_moments <- read.csv("moments_LD_1_pop_out.csv") # out from python chunk
common_moments <- intersect(names(momspp), names(py_moments))
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$method <- c(rep("moments++", num_scenarios),
rep("moments.LD", num_scenarios))
full_tbl <- bind_cols(match_moments,
bind_rows(params_2_pop, params_2_pop))
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
names_to="variable")
py_moments <- read.csv("moments_LD_1_pop_out.csv") # out from python chunk
View(py_moments)
common_moments <- intersect(names(momspp), names(py_moments))
common_moments
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments
View(match_moments)
num_scenarios
match_moments$method <- c(rep("moments++", num_scenarios),
rep("moments.LD", num_scenarios))
full_tbl <- bind_cols(match_moments,
bind_rows(params_1_pop, params_1_pop))
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
names_to="variable")
# all moments/scenarios together
p <- ggplot(data=dat_matched,
aes(x=variable, y=value, color=method, shape=as.factor(scenario)))
p <- p + geom_point(size=3) + theme_bw()
p <- p + labs(title="1-Pop moments++ vs moments.LD",
x="Moment", y="Value", shape="Scenario")
p <- p + scale_y_continuous(trans="log10")
p <- p + theme(axis.title=element_text(size=20),
axis.text=element_text(size=14),
axis.text.x=element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position="bottom")
ggsave("moments++_vs_momentsLD_1-pop_all_stats_.png",
p, device="png", width=12, height=12)
View(dat_matched)
```{r 1-pop-params, message=FALSE, warning=FALSE}
r <- c(1e-8, 1e-7, 1e-6)
mu <- c(1e-8, 1e-7, 1e-6)
N <- c(1e+3, 1e+4, 1e+5)
params_1_pop <- crossing(N, mu, r) %>% arrange(N, mu, r)
write.csv(params_1_pop, "params_1_pop.csv", quote=F, sep=",", row.names=F)
mu <- 1e-7
r <- c(0, 1e-6)
N_0 <- c(1e+4, 1e+5)
N_1 <- 1e+5
m_01 <- c(0, 1e-4)
m_10 <- 1e-4
num_epochs <- c(1, 2)
num_gen_epoch_2 <- 5000
N_0_epoch_2 <- N_0 / 10
N_1_epoch_2 <- N_1 / 10
params_2_pop <- crossing(num_epochs, mu, r , m_01, m_10, N_0, N_1)
params_2_pop <- mutate(params_2_pop,
N_0_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ (N_0 / 10)))
params_2_pop <- mutate(params_2_pop,
N_1_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ (N_1 / 10)))
params_2_pop <- mutate(params_2_pop,
num_gen_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ 5000))
write.csv(params_2_pop, "params_2_pops.csv", sep=",",
quote=F, row.names=F, col.names=T)
reticulate::repl_python()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# for running moments.LD:
library(reticulate)
use_python("/usr/bin/python3")
knitr::opts_knit$set(root.dir="~/Devel/momentspp/benchmarking/")
save_plots <- FALSE # should this script ggsave plots to root.dir?
print(params_2_pop, n=nrow(params_2_pop))
mu <- c(1e-7)
r <- c(0, 1e-6)
N_0 <- c(1e+4, 1e+5)
N_1 <- c(1e+5)
m_01 <- c(0, 1e-5)
m_10 <- c(1e-6, 1e-5)
num_epochs <- c(1, 2)
num_gen_epoch_2 <- 5000
params_2_pop <- crossing(num_epochs, mu, r , m_01, m_10, N_0, N_1)
params_2_pop <- mutate(params_2_pop,
N_0_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ (N_0)))
params_2_pop <- mutate(params_2_pop,
N_1_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ (N_1)))
params_2_pop <- mutate(params_2_pop,
num_gen_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ 5000))
print(params_2_pop, n=nrow(params_2_pop))
write.csv(params_2_pop, "params_2_pops.csv", sep=",",
quote=F, row.names=F, col.names=T)
?write.csv
write.csv(params_2_pop, "params_2_pops.csv")
write.csv(params_2_pop, "params_2_pops.csv", sep=",",
quote=F, row.names=F, col.names=T)
write.csv(params_2_pop, "params_2_pops.csv", sep="\t",
quote=F, row.names=F, col.names=T)
write.csv(params_2_pop, "params_2_pops.csv",
quote=F, row.names=F, col.names=T)
mu <- c(1e-7)
r <- c(0, 1e-6)
N_0 <- c(1e+4, 1e+5)
N_1 <- c(1e+5)
N_2 <- c(1e+4)
m_01 <- c(0, 1e-5)
m_02 <- c(1e-5)
m_10 <- c(1e-6)
m_12 <- c(1e-4)
m_20 <- c(1e-3)
m_21 <- c(1e-5)
params_3_pop <- crossing(mu, r,
N_0, N_1, N_2,
m_01, m_02, m_10, m_12, m_20, m_21)
print(params_3_pop, n=nrow(params_3_pop))
write.csv(params_3_pop, "params_3_pops.csv", sep=",",
quote=F, row.names=F, col.names=T)
write.csv(params_3_pop, "params_3_pops.csv", sep=",",
quote=F, row.names=F, col.names=T)
write.csv(params_2_pop, "params_2_pops.csv", quote=F, sep=",", row.names=F)
mu <- c(1e-7)
r <- c(0, 1e-6)
N_0 <- c(1e+4, 1e+5)
N_1 <- c(1e+5)
m_01 <- c(0, 1e-5)
m_10 <- c(1e-6, 1e-5)
num_epochs <- c(1, 2)
num_gen_epoch_2 <- 5000
params_2_pop <- crossing(num_epochs, mu, r , m_01, m_10, N_0, N_1)
params_2_pop <- mutate(params_2_pop,
N_0_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ (N_0)))
params_2_pop <- mutate(params_2_pop,
N_1_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ (N_1)))
params_2_pop <- mutate(params_2_pop,
num_gen_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ 5000))
print(params_2_pop, n=nrow(params_2_pop))
write.csv(params_2_pop, "params_2_pops.csv", quote=F, sep=",", row.names=F)
write.csv(params_2_pop, "params_2_pops.csv", quote=F, sep=",", row.names=F)
write.table(params_2_pop, "params_2_pops.csv", quote=F, sep=",", row.names=F)
write.table(params_2_pop, "params_2_pops.csv", quote=F, sep=",", row.names=F)
mu <- c(1e-7)
r <- c(0, 1e-6)
N_0 <- c(1e+4, 1e+5)
N_1 <- c(1e+5)
N_2 <- c(1e+4)
m_01 <- c(0, 1e-5)
m_02 <- c(1e-5)
m_10 <- c(1e-6)
m_12 <- c(1e-4)
m_20 <- c(1e-3)
m_21 <- c(1e-5)
params_3_pop <- crossing(mu, r,
N_0, N_1, N_2,
m_01, m_02, m_10, m_12, m_20, m_21)
print(params_3_pop, n=nrow(params_3_pop))
write.table(params_3_pop, "params_3_pops.csv", sep=",", quote=F, row.names=F)
mu <- c(1e-7)
r <- c(0, 1e-6)
N_0 <- c(1e+4, 1e+5)
N_1 <- c(1e+5)
m_01 <- c(0, 1e-5)
m_10 <- c(1e-6, 1e-5)
num_epochs <- c(1, 2)
num_gen_epoch_2 <- 5000
params_2_pop <- crossing(num_epochs, mu, r , m_01, m_10, N_0, N_1)
params_2_pop <- mutate(params_2_pop,
N_1_epoch_2 = case_when(num_epochs==1 ~ NA_real_,
num_epochs==2 ~ (N_1)))
print(params_2_pop, n=nrow(params_2_pop))
write.table(params_2_pop, "params_2_pops.csv", quote=F, sep=",", row.names=F)
params_2_pop
params_2_pop
View(params_2_pop)
params_2_pops <- read.csv("params_2_pops.csv", header=T, sep=",")
num_scenarios <- nrow(params_2_pops)
# extracting names of moments
stats_2_pops <- read.table("2-pops_scenario_1_final_unsorted.txt")[,1]
num_stats <- length(stats_2_pops)
momspp <- as_tibble(matrix(nrow=num_scenarios, ncol=num_stats), .name_repair="unique")
momspp <- as_tibble(matrix(nrow=num_scenarios, ncol=num_stats), .name_repair="unique")
names(momspp) <- stats_2_pops
idx=1
for(i in 1:num_scenarios) {
tmp <- read.table(paste("2-pops_scenario_", idx, "_final_unsorted.txt", sep=""))
momspp[idx,] <- t(tmp[ncol(tmp)])
idx=idx + 1
}
stats <- bind_cols(momspp, params_2_pops)
dat_stats <- pivot_longer(stats, cols=all_of(stats_2_pops), names_to="variable")
View(dat_stats)
View(stats)
py_moments <- read.csv("moments_LD_3_pops_out.csv") # out from python chunk
common_moments <- intersect(names(momspp), names(py_moments))
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$method <- c(rep("moments++", num_scenarios),
rep("moments.LD", num_scenarios))
full_tbl <- bind_cols(match_moments,
bind_rows(params_3_pop, params_3_pop))
py_moments <- read.csv("moments_LD_3_pops_out.csv") # out from python chunk
common_moments <- intersect(names(momspp), names(py_moments))
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
params_3_pops <- read.csv("params_3_pops.csv", header=T, sep=",")
num_scenarios <- nrow(params_3_pops)
# extracting names of moments
stats_3_pops <- read.table("3-pops_scenario_1_final_unsorted.txt")[,1]
num_stats <- length(stats_3_pops)
momspp <- as_tibble(matrix(nrow=num_scenarios, ncol=num_stats), .name_repair="unique")
momspp <- as_tibble(matrix(nrow=num_scenarios, ncol=num_stats), .name_repair="unique")
names(momspp) <- stats_3_pops
momspp <- as_tibble(matrix(nrow=num_scenarios, ncol=num_stats), .name_repair="unique")
names(momspp) <- stats_3_pops
idx=1
idx=1
for(i in 1:num_scenarios) {
tmp <- read.table(paste("3-pops_scenario_", idx, "_final_unsorted.txt", sep=""))
momspp[idx,] <- t(tmp[ncol(tmp)])
idx=idx + 1
}
stats <- bind_cols(momspp, params_3_pops)
stats$scenario <- 1:nrow(stats)
write.table(momspp, "moments++_3_pops_stats.csv", sep=",", row.names=F, quote=F)
dat_stats <- pivot_longer(stats, cols=all_of(stats_3_pops), names_to="variable")
py_moments <- read.csv("moments_LD_3_pops_out.csv") # out from python chunk
common_moments <- intersect(names(momspp), names(py_moments))
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
View(match_moments)
num_scenarios
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$method <- c(rep("moments++", num_scenarios),
rep("moments.LD", num_scenarios))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments
colnames(match_moments)
full_tbl <- bind_cols(match_moments,
bind_rows(params_3_pop, params_3_pop))
# following lines help visualization in raw table
full_tbl$sep_moments <- paste(full_tbl$scenario, full_tbl$method, sep="_")
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
names_to="variable")
dat_matched$matched_moments <- paste(dat_matched$variable,
dat_matched$sep_moments,
sep="_")
dat_matched <- arrange(dat_matched, scenario, matched_moments)
dat_matched <- select(dat_matched, -c(sep_moments, matched_moments))
dat_matched
dat_matched <- arrange(dat_matched, scenario, matched_moments)
# following lines help visualization in raw table
full_tbl$sep_moments <- paste(full_tbl$scenario, full_tbl$method, sep="_")
dat_matched <- pivot_longer(full_tbl,
cols=all_of(common_moments),
names_to="variable")
dat_matched$matched_moments <- paste(dat_matched$variable,
dat_matched$sep_moments,
sep="_")
dat_matched <- arrange(dat_matched, scenario, matched_moments)
dat_matched <- select(dat_matched, -c(sep_moments, matched_moments))
p <- ggplot(data=dat_matched,
aes(x=variable, y=value, shape=method, color=as.factor(scenario)))
p <- p + geom_point(size=2) + theme_bw() + facet_grid(N_0~r)
p <- p + scale_y_continuous(trans="log10")
p <- p + scale_shape_manual(values=c(1, 2))
p <- p + labs(title = "Expectations x N_0 (rows) and r (cols)",
x="Moment", y="Value", shape="Method", color="# Epochs")
p <- p + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position="bottom")
print(p)
#if(save_plots) {
ggsave("expect_moments++_vs_moments.LD_3-pops.png",
p, device="png", width=12, height=12)
ratio <- filter(full_tbl, method=="moments++") %>% select(common_moments) /
filter(full_tbl, method=="moments.LD") %>% select(common_moments)
ratio_tbl <- bind_cols(ratio, select(filter(full_tbl, method=="moments++"),
-common_moments)) %>% select(-c("method",
"sep_moments"))
dat_ratio <- pivot_longer(ratio_tbl, cols=all_of(common_moments), names_to="variable")
p <- ggplot(data=dat_ratio,
aes(x=variable, y=value, shape=method, color=as.factor(scenario)))
p <- p + geom_point(size=2) + theme_bw() + facet_grid(N_0~r)
p <- p + scale_y_continuous(trans="log10")
p <- p + scale_shape_manual(values=c(1, 2))
p <- p + labs(title = "Expectations x N_0 (rows) and r (cols)",
x="Moment", y="Value", shape="Method", color="# Epochs")
p <- p + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position="bottom")
#if(save_plots) {
ggsave("ratio_moments++_vs_moments.LD_3-pops.png",
p, device="png", width=12, height=12)
dat_ratio
ratio <- filter(full_tbl, method=="moments++") %>% select(common_moments) /
filter(full_tbl, method=="moments.LD") %>% select(common_moments)
ratio_tbl <- bind_cols(ratio, select(filter(full_tbl, method=="moments++"),
-common_moments)) %>% select(-c("method",
"sep_moments"))
ratio_tbl
dat_ratio <- pivot_longer(ratio_tbl, cols=all_of(common_moments), names_to="variable")
p <- ggplot(data=dat_ratio,
aes(x=variable, y=value, color=as.factor(scenario)))
p <- p + geom_point(size=2) + theme_bw() + facet_grid(N_0~r)
p <- p + scale_y_continuous(trans="log10")
p <- p + labs(title = "Expectations x N_0 (rows) and r (cols)",
x="Moment", y="Value", shape="Method", color="# Epochs")
p <- p + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position="bottom")
#if(save_plots) {
ggsave("ratio_moments++_vs_moments.LD_3-pops.png",
p, device="png", width=12, height=12)
p <- ggplot(data=filter(dat_ratio, m_01==0),
aes(x=variable, y=value, color=as.factor(scenario)))
p <- p + geom_point(size=1) + theme_bw() + facet_grid(N_0~r)
p <- p + labs(title = "Ratio ++/LD (m_01 == 0) x N_0 (rows) and r (cols)",
x="Moment", y="Value", color="Scenario")
p <- p + theme(axis.title=element_text(size=12),
axis.text=element_text(size=10),
axis.text.x=element_text(angle=90, size=8, vjust=0.5, hjust=1.0),
legend.position="bottom")
p <- p + geom_hline(yintercept=1, linetype="dashed", color = "darkgrey")
#if(save_plots) {
ggsave("ratio_moments++_vs_moments.LD_3-pops.png",
p, device="png", width=12, height=12)
4.9/5.9
View(momspp)
getwd()
setwq("Devel/momentspp/debug/")
setwd("Devel/momentspp/debug/")
mu <- 1e-6
r <- 1e-6
N_0 <- 1e+4
N_1 <- 1e+4
N_2 <- 1e+4
m_01 <- c(0, 1e-4)
m_02 <- c(0, 1e-4)
m_10 <- c(0, 1e-4)
m_12 <- c(1e-4, 1e-4)
m_20 <- c(1e-4, 1e-4)
m_21 <- c(0, 1e-4)
params_3_pop <- crossing(mu, r,
N_0, N_1, N_2,
m_01, m_02, m_10, m_12, m_20, m_21)
print(params_3_pop, n=nrow(params_3_pop))
View(params_3_pop)
getwd()
x <- read.csv("../benchmarking/LD_++_3-pops.csv", header = T)
View(x)
full_tbl
View(full_tbl)
full_tbl <- bind_cols(match_moments,
bind_rows(params_3_pop, params_3_pop))
py_moments <- read.csv("moments_LD_3_pops_out.csv") # out from python chunk
common_moments <- intersect(names(momspp), names(py_moments))
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
match_moments$method <- c(rep("moments++", num_scenarios),
rep("moments.LD", num_scenarios))
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
common_moments <- intersect(names(momspp), names(py_moments))
momspp
common_moments
match_moments <- bind_rows(select(momspp, all_of(common_moments)),
select(py_moments, all_of(common_moments)))
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
num_scenarios
num_scenarios = 16
match_moments$scenario <- rep(seq(1:num_scenarios), 2)
# extracting names of moments
stats_1_pop <- read.table("1-pop_scenario_1_final_unsorted.txt")[,1]
stats_1_pop <- read.table("1-pop_scenario_1_final_unsorted.txt")[,1]
getwd()
setwd("~/Devel/momentspp/benchmarking/")
mu <- 1e-6
r <- 1e-6
N_0 <- 1e+4
N_1 <- 1e+4
N_2 <- 1e+4
m_01 <- c(0, 1e-4)
m_02 <- c(0, 1e-4)
m_10 <- c(0, 1e-4)
m_12 <- c(1e-4, 1e-4)
m_20 <- c(1e-4, 1e-4)
m_21 <- c(0, 1e-4)
4*r*N_0
0.125/2
75*1000
75*1000/3600
70*1000/3600
5*1000/3600
5=19*1000/3600
10*1000/3600
4.200029e-06
4.200029e-06 / 8.971115e-06
3.336695e-02 / 8.559673e-02
8^2 + 8^3 + 8^2 + 8^4
(8^2 + 8^3 + 8^2 + 8^4)^2
reticulate::repl_python()
