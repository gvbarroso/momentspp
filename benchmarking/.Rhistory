legend.position="bottom")
save_plot("selection/no_migration/D1D2_no-mig.pdf", p1, base_height=12, base_width=12)
# plot d1d2 vs alpha, shape=r
p1 <- ggplot(data=d1d2, aes(x=r, y=ratio)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=2, shape=1) + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3)) + scale_y_log10()
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p1 <- p1 + theme(axis.title=element_text(size=20),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
save_plot("selection/no_migration/D1D2_no-mig.pdf", p1, base_height=12, base_width=12)
p1 <- ggplot(data=d1d2, aes(x=r, y=ratio)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=2, shape=1) + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3)) + scale_y_log10()
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
save_plot("selection/no_migration/D1D2_no-mig.pdf", p1, base_height=12, base_width=12)
p1 <- ggplot(data=d1d2, aes(x=r, y=ratio)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=2, shape=1) + geom_line() + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3)) + scale_y_log10()
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
save_plot("selection/no_migration/D1D2_no-mig.pdf", p1, base_height=12, base_width=12)
p1 <- ggplot(data=d1d2, aes(x=r, y=ratio)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=2, shape=16) + geom_line() + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3)) + scale_y_log10()
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
save_plot("selection/no_migration/D1D2_no-mig.pdf", p1, base_height=12, base_width=12)
p1 <- ggplot(data=d1d2, aes(x=r, y=ratio)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3)) + scale_y_log10()
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
save_plot("selection/no_migration/D1D2_no-mig.pdf", p1, base_height=12, base_width=12)
p1 <- ggplot(data=d1d2, aes(x=r, y=ratio)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p1 <- p1 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.15, 0.2, 0.25, 0.3))
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
save_plot("selection/no_migration/D1D2_no-mig.pdf", p1, base_height=12, base_width=12)
d1d2 <- d1d2[d1d2$alpha_1==d1d2$alpha_2,]
p2 <- ggplot(data=d1d2, aes(x=alpha_1, y=ratio, shape=as.factor(r)))
p2 <- ggplot(data=d1d2, aes(x=alpha_1, y=ratio, shape=as.factor(r)))
p2 <- p2 + geom_point(size=3) + geom_line() + theme_bw()
p2 <- p2 + scale_shape_manual(values=(0:4))
p2 <- p2 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.15, 0.2, 0.25, 0.3))
p2 <- p2 + labs(title="Symmetric Population Sizes", x="2Ns", y="E[D1D2] / E[pi2_1212]")
p2 <- p2 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p2
p2 <- ggplot(data=d1d2, aes(x=alpha_1, y=ratio, color=as.factor(r)))
p2 <- p2 + geom_point(size=3) + geom_line() + theme_bw()
p2 <- p2 + scale_shape_manual(values=(0:4))
p2 <- p2 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.15, 0.2, 0.25, 0.3))
p2 <- p2 + labs(title="Symmetric Population Sizes", x="2Ns", y="E[D1D2] / E[pi2_1212]")
p2 <- p2 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p2
library(RColorBrewer)
p2 <- ggplot(data=d1d2, aes(x=alpha_1, y=ratio, color=as.factor(r)))
p2 <- p2 + geom_point(size=3) + geom_line() + theme_bw()
p2 <- p2 + scale_color_brewer(palette = "PuOr")
p2 <- p2 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.15, 0.2, 0.25, 0.3))
p2 <- p2 + labs(title="Symmetric Population Sizes", x="2Ns", y="E[D1D2] / E[pi2_1212]")
p2 <- p2 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p2
save_plot("selection/no_migration/D1D2_no-mig_2.pdf", p2, base_height=12, base_width=12)
save_plot("selection/no_migration/D1D2_no-mig_1.pdf", p1, base_height=12, base_width=12)
getwd()
p2
p2 <- ggplot(data=d1d2, aes(x=alpha_1, y=ratio, color=as.factor(r)))
p2 <- p2 + geom_point(size=3) + geom_line() + theme_bw()
p2 <- p2 + scale_color_brewer(palette = "PuOr")
p2 <- p2 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.15, 0.2, 0.25, 0.3))
p2 <- p2 + labs(title="Symmetric Population Sizes and Selection coefficients", x="2Ns", y="E[D1D2] / E[pi2_1212]")
p2 <- p2 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p2
# Fst at the Left Locus
hr <- df_sym_N %>% filter(str_detect(stat, "^Hr"))
View(df_sym_N)
# Fst at the Left Locus
hr <- df_sym_N %>% filter(str_detect(stats, "^Hr"))
View(hr)
# Fst at the Left Locus
hr <- df_sym_N %>% filter(str_detect(stats, "Hr^"))
View(hr)
core_stats <- c("DD_1_1",
"DD_1_2",
"DD_2_2",
"Dr_1_1_(1-2p1)^1",
"Dr_1_1_(1-2p2)^1",
"Dr_1_2_(1-2p2)^1",
"Dr_2_1_(1-2p1)^1",
"Dr_2_1_(1-2p2)^1",
"Dr_2_2_(1-2p2)^1",
"pi2_1_1_1_1",
"pi2_1_1_1_2",
"pi2_1_1_2_2",
"pi2_1_2_1_2",
"pi2_1_2_2_2",
"pi2_2_2_2_2",
"Hl_1_1",
"Hl_1_2",
"Hl_2_1",
"Hl_2_2",
"Hr_1_1",
"Hr_1_2",
"Hr_2_1",
"Hr_2_2")
expectation <- numeric()
for(i in 1:n_models) {
x <- read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
x <- subset(x, V1 %in% core_stats)
x <- slice(x, 1:9, 13:18, 10:12) # to match moments.LD output
expectation <- c(expectation, x$V3)
}
x <- read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
i
read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
getwd()
setwd("../../benchmarking/")
x <- read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
x <- read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
x
x <- read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
x
x <- subset(x, V1 %in% core_stats)
x
x
for(i in 1:n_models) {
x <- read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
x <- subset(x, V1 %in% core_stats)
expectation <- c(expectation, x$V3)
}
knitr::opts_knit$set(root.dir="~/Devel/momentspp/benchmarking/")
getwd()
core_stats <- c("DD_1_1",
"DD_1_2",
"DD_2_2",
"Dr_1_1_(1-2p1)^1",
"Dr_1_1_(1-2p2)^1",
"Dr_1_2_(1-2p2)^1",
"Dr_2_1_(1-2p1)^1",
"Dr_2_1_(1-2p2)^1",
"Dr_2_2_(1-2p2)^1",
"pi2_1_1_1_1",
"pi2_1_1_1_2",
"pi2_1_1_2_2",
"pi2_1_2_1_2",
"pi2_1_2_2_2",
"pi2_2_2_2_2",
"Hl_1_1",
"Hl_1_2",
"Hl_2_1",
"Hl_2_2",
"Hr_1_1",
"Hr_1_2",
"Hr_2_1",
"Hr_2_2")
expectation <- numeric()
for(i in 1:n_models) {
x <- read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
x <- subset(x, V1 %in% core_stats)
expectation <- c(expectation, x$V3)
}
tbl <- as.data.frame(expectation)
tbl$stats <- core_stats
tbl
expectation <- numeric()
for(i in 1:n_models) {
x <- read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
x <- subset(x, V1 %in% core_stats)
expectation <- c(expectation, x$V3)
}
core_stats
expectation <- c(expectation, x$V3)
expectation <- numeric()
for(i in 1:n_models) {
x <- read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
x <- subset(x, V1 %in% core_stats)
expectation <- c(expectation, x$V3)
}
tbl <- as.data.frame(expectation)
View(tbl)
tbl <- as.data.frame(expectation)
tbl$stats <- core_stats
5500/23
x <- read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
length(x)
x <- subset(x, V1 %in% core_stats)
length(x)
x
nrow(x)
core_stats <- c("DD_1_1",
"DD_1_2",
"DD_2_2",
"Dr_1_1_(1-2p1)^1",
"Dr_1_1_(1-2p2)^1",
"Dr_1_2_(1-2p2)^1",
"Dr_2_1_(1-2p1)^1",
"Dr_2_1_(1-2p2)^1",
"Dr_2_2_(1-2p2)^1",
"pi2_1_1_1_1",
"pi2_1_1_1_2",
"pi2_1_1_2_2",
"pi2_1_2_1_2",
"pi2_1_2_2_2",
"pi2_2_2_2_2",
"Hl_1_1",
"Hl_1_2",
"Hl_2_1",
"Hl_2_2",
"Hr_1_1",
"Hr_1_2",
#"Hr_2_1",
"Hr_2_2")
expectation <- numeric()
for(i in 1:n_models) {
x <- read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
x <- subset(x, V1 %in% core_stats)
expectation <- c(expectation, x$V3)
}
tbl <- as.data.frame(expectation)
tbl$stats <- core_stats
scenario <- NULL
for(i in 1:n_models) {
scenario <- c(scenario, rep(i, length(core_stats)))
}
tbl$scenario <- scenario
df <- full_join(tbl, params, by="scenario")
# transforms variables
df$alpha_1 <- df$s1 * df$N1
df$alpha_2 <- df$s2 * df$N2
df <- df[df$r < 1e-3,] # for increased resolution in the plots
# symmetric population sizes
df_sym_N <- df[df$N1==df$N2,]
df_sym_N[df_sym_N$r==0,]$r <- 1e-12 # for log transformation
# D1D2
d1d2 <- subset(df_sym_N, stats %in% "DD_1_2")
d1d2$ratio <- d1d2$expectation / subset(df_sym_N, stats %in% "pi2_1_2_1_2")$expectation
p1 <- ggplot(data=d1d2, aes(x=r, y=ratio)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p1 <- p1 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.15, 0.2, 0.25, 0.3))
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
save_plot("selection/no_migration/D1D2_no-mig_1.pdf", p1, base_height=12, base_width=12)
d1d2 <- d1d2[d1d2$alpha_1==d1d2$alpha_2,]
p2 <- ggplot(data=d1d2, aes(x=alpha_1, y=ratio, color=as.factor(r)))
p2 <- p2 + geom_point(size=3) + geom_line() + theme_bw()
p2 <- p2 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.15, 0.2, 0.25, 0.3))
p2 <- p2 + labs(title="Symmetric Population Sizes and Selection coefficients", x="2Ns", y="E[D1D2] / E[pi2_1212]")
p2 <- p2 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
save_plot("selection/no_migration/D1D2_no-mig_2.pdf", p2, base_height=12, base_width=12)
# Fst at the Left Locus
hr <- df_sym_N %>% filter(str_detect(stats, "Hr^"))
# Fst at the Left Locus
hr <- df_sym_N %>% filter(str_detect(stats, "^Hr"))
hr
# Fst at the Left Locus
fst <- subset(df_sym_N, stats %in% "Hl_1_2")
# Fst at the Left Locus
Hl_12 <- subset(df_sym_N, stats %in% "Hl_1_2")
Hl_21 <- subset(df_sym_N, stats %in% "Hl_2_1")
Hl_11 <- subset(df_sym_N, stats %in% "Hl_1_1")
Hl_22 <- subset(df_sym_N, stats %in% "Hl_2_2")
(Hl_12$expectation + H_21$expectation) / 2
# Fst at the Left Locus
Hl_12 <- subset(df_sym_N, stats %in% "Hl_1_2")
Hl_21 <- subset(df_sym_N, stats %in% "Hl_2_1")
Hl_11 <- subset(df_sym_N, stats %in% "Hl_1_1")
Hl_22 <- subset(df_sym_N, stats %in% "Hl_2_2")
(Hl_12$expectation + H_21$expectation) / 2
(Hl_12$expectation + Hl_21$expectation) / 2
fst$expectation <- 1 - pi_within / pi_between
pi_between <- (Hl_12$expectation + Hl_21$expectation) / 2
pi_within <- (Hl_11$expectation + Hl_22$expectation) / 2
fst <- Hl_12
fst$expectation <- 1 - pi_within / pi_between
p3 <- ggplot(data=fst, aes(x=r, y=expectation)) + facet_grid(+alpha_1~alpha_2)
p3 <- p3 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p3 <- p3 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p3 <- p3 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p3 <- p3 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p3
fst
View(fst)
pi_within
pi_between
Hl_12$expectation
Hl_21$expectation
df_sym_N
View(df_sym_N)
core_stats
expectation <- numeric()
for(i in 1:n_models) {
x <- read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
x <- subset(x, V1 %in% core_stats)
expectation <- c(expectation, x$V3)
}
tbl
expectation <- numeric()
for(i in 1:n_models) {
x <- read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
x <- subset(x, V1 %in% core_stats)
expectation <- c(expectation, x$V3)
}
tbl <- as.data.frame(expectation)
x
View(x)
core_stats <- c("DD_1_1",
"DD_1_2",
"DD_2_2",
"Dr_1_1_(1-2p1)^1",
"Dr_1_1_(1-2p2)^1",
"Dr_1_2_(1-2p2)^1",
"Dr_2_1_(1-2p1)^1",
"Dr_2_1_(1-2p2)^1",
"Dr_2_2_(1-2p2)^1",
"Hl_1_1",
"Hl_1_2",
"Hl_2_1",
"Hl_2_2",
"Hr_1_1",
"Hr_1_2",
#"Hr_2_1",
"Hr_2_2",
"pi2_1_1_1_1",
"pi2_1_1_1_2",
"pi2_1_1_2_2",
"pi2_1_2_1_2",
"pi2_1_2_2_2",
"pi2_2_2_2_2")
expectation <- numeric()
for(i in 1:n_models) {
x <- read.table(paste("selection/no_migration/model_", i, "_expectations.txt", sep=""))
x <- subset(x, V1 %in% core_stats)
expectation <- c(expectation, x$V3)
}
tbl <- as.data.frame(expectation)
tbl$stats <- core_stats
scenario <- NULL
for(i in 1:n_models) {
scenario <- c(scenario, rep(i, length(core_stats)))
}
tbl$scenario <- scenario
df <- full_join(tbl, params, by="scenario")
# transforms variables
df$alpha_1 <- df$s1 * df$N1
df$alpha_2 <- df$s2 * df$N2
df <- df[df$r < 1e-3,] # for increased resolution in the plots
# symmetric population sizes
df_sym_N <- df[df$N1==df$N2,]
df_sym_N[df_sym_N$r==0,]$r <- 1e-12 # for log transformation
# D1D2
d1d2 <- subset(df_sym_N, stats %in% "DD_1_2")
d1d2$ratio <- d1d2$expectation / subset(df_sym_N, stats %in% "pi2_1_2_1_2")$expectation
p1 <- ggplot(data=d1d2, aes(x=r, y=ratio)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p1 <- p1 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.15, 0.2, 0.25, 0.3))
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
save_plot("selection/no_migration/D1D2_no-mig_1.pdf", p1, base_height=12, base_width=12)
d1d2 <- d1d2[d1d2$alpha_1==d1d2$alpha_2,]
p2 <- ggplot(data=d1d2, aes(x=alpha_1, y=ratio, color=as.factor(r)))
p2 <- p2 + geom_point(size=3) + geom_line() + theme_bw()
p2 <- p2 + scale_color_brewer(palette="PuOr")
p2 <- p2 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.15, 0.2, 0.25, 0.3))
p2 <- p2 + labs(title="Symmetric Population Sizes and Selection coefficients", x="2Ns", y="E[D1D2] / E[pi2_1212]")
p2 <- p2 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
save_plot("selection/no_migration/D1D2_no-mig_2.pdf", p2, base_height=12, base_width=12)
# Fst at the Left Locus
Hl_12 <- subset(df_sym_N, stats %in% "Hl_1_2")
Hl_21 <- subset(df_sym_N, stats %in% "Hl_2_1")
Hl_11 <- subset(df_sym_N, stats %in% "Hl_1_1")
Hl_22 <- subset(df_sym_N, stats %in% "Hl_2_2")
pi_between <- (Hl_12$expectation + Hl_21$expectation) / 2
pi_within <- (Hl_11$expectation + Hl_22$expectation) / 2
fst <- Hl_12
fst$expectation <- 1 - pi_within / pi_between
fst$expectation
p3 <- ggplot(data=fst, aes(x=r, y=expectation)) + facet_grid(+alpha_1~alpha_2)
p3 <- p3 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p3 <- p3 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p3 <- p3 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.15, 0.2, 0.25, 0.3))
p3 <- p3 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p3 <- p3 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
save_plot("selection/no_migration/Fst_no-mig.pdf", p3, base_height=12, base_width=12)
# Fst at the Right Locus
#hr <- df_sym_N %>% filter(str_detect(stats, "^Hr"))
Hr_12 <- subset(df_sym_N, stats %in% "Hr_1_2")
Hr_21 <- subset(df_sym_N, stats %in% "Hr_2_1")
Hr_11 <- subset(df_sym_N, stats %in% "Hr_1_1")
Hr_22 <- subset(df_sym_N, stats %in% "Hr_2_2")
pi_between <- (Hr_12$expectation + Hr_21$expectation) / 2
pi_within <- (Hr_11$expectation + Hr_22$expectation) / 2
fst <- Hr_12
fst$expectation <- 1 - pi_within / pi_between
pi_between <- Hr_12$expectation #(Hr_12$expectation + Hr_21$expectation) / 2
pi_within <- (Hr_11$expectation + Hr_22$expectation) / 2
fst <- Hr_12
fst$expectation <- 1 - pi_within / pi_between
fst$expectation
p4 <- ggplot(data=fst, aes(x=r, y=expectation)) + facet_grid(+alpha_1~alpha_2)
p4 <- p4 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p4 <- p4 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p4 <- p4 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.15, 0.2, 0.25, 0.3))
p4 <- p4 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p4 <- p4 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p4
save_plot("selection/no_migration/Fst_no-mig_right.pdf", p4, base_height=12, base_width=12)
fst$expectation
p4 <- ggplot(data=fst, aes(x=r, y=expectation)) + facet_grid(+alpha_1~alpha_2)
p4 <- p4 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p4 <- p4 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p4 <- p4 + scale_y_log10(breaks=pretty_breaks())
p4 <- p4 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p4 <- p4 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
save_plot("selection/no_migration/Fst_no-mig_right.pdf", p4, base_height=12, base_width=12)
2 * 1e+4 * 5e-05
s1 <- c(0, -5e-05, -1e-04, -5e-04, -1e-3)
s1 * 2 * 1e+4
# symmetrical pop sizes
N1 <- 10000
N2 <- c(N1, N1 / 10)
u <- 1e-7
r  <- c(1e-3, 1e-4, 1e-5, 1e-6, 0)
s1 <- c(0, -5e-05, -1e-04, -5e-04, -1e-3)
s2 <- c(0, -5e-05, -1e-04, -5e-04, -1e-3)
split_time <- 2000
params <- crossing(N1, N2, u, r, s1, s2)
params$scenario <- 1:nrow(params)
n_models <- nrow(params)
n_models
# symmetrical pop sizes
N1 <- 10000
N2 <- c(N1, N1 / 10)
u <- 1e-7
r  <- c(1e-3, 1e-4, 1e-5, 1e-6, 0)
s1 <- c(0, -5e-05, -1e-04, -2.5e-04, -5e-04, -1e-3)
s2 <- c(0, -5e-05, -1e-04, -2.5e-04, -5e-04, -1e-3)
split_time <- 2000
params <- crossing(N1, N2, u, r, s1, s2)
params$scenario <- 1:nrow(params)
n_models <- nrow(params)
n_models
knitr::opts_chunk$set(echo=TRUE)
library(tidyverse)
library(cowplot)
library(stringr)
library(RColorBrewer)
# for running moments.LD:
library(reticulate)
use_python("/usr/bin/python3")
# handy global variable
n_models <- 0
knitr::opts_knit$set(root.dir="~/Devel/momentspp/benchmarking/")
getwd()
