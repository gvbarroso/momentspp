new <- evolve_neutral(prev, N, u, r)
diff <- sum((new / N - prev / N) ^ 2)
cat(diff)
cat("\n")
if(diff < tol) {
break
}
else {
prev <- new
}
}
return(new)
}
v <- burn_in(x1, u, r, s, tol=1e-7)
v
v <- burn_in(x1, u, r, s, tol=1e-7)
v
v <- burn_in(x1, u, r, s, tol=1e-7)
v
v <- burn_in(x1, u, r, s, tol=1e-7)
v
burn_in
evolve_neutral()
evolve_neutral
for(i in 1:1e+5) {
x1 <- recombine_random(x1, 1e-4)
cat(x1)
cat("\n")
}
n_ab <- x[1]
n_Ab <- x[2]
n_aB <- x[3]
x=x1
n_ab <- x[1]
n_Ab <- x[2]
n_aB <- x[3]
n_ab
n_Ab
n_aB
n_ab_mut <- rbinom(1, n_ab, 2 * u)
n_ab_mut
n_ab
u
n_Ab_mut <- rbinom(1, n_Ab, u)
n_aB_mut <- rbinom(1, n_aB, u)
n_Ab_mut
n_aB_mut
to_Ab <- rbinom(1, n_ab_mut, 0.5)
to_aB <- n_ab_mut - to_Ab
to_Ab
to_aB
x[1] <- x[1] - n_ab_mut
x[2] <- x[2] - n_Ab_mut  + to_Ab
x[3] <- x[3] - n_aB_mut + to_aB
x[4] <- x[4] + n_Ab_mut + n_aB_mut
x
n_ab_mut <- rbinom(1, n_ab, 2 * u)
n_Ab_mut <- rbinom(1, n_Ab, u)
n_aB_mut <- rbinom(1, n_aB, u)
to_Ab <- rbinom(1, n_ab_mut, 0.5)
to_aB <- n_ab_mut - to_Ab
to_aB
to_Ab
u=1e-4
n_ab_mut <- rbinom(1, n_ab, 2 * u)
n_Ab_mut <- rbinom(1, n_Ab, u)
n_aB_mut <- rbinom(1, n_aB, u)
n_ab_mut
n_Ab_mut
n_aB_mut
to_Ab
to_aB
n_ab_mut <- rbinom(1, n_ab, 2 * u)
n_Ab_mut <- rbinom(1, n_Ab, u)
n_ab_mut
n_Ab_mut <- rbinom(1, n_Ab, u)
n_aB_mut <- rbinom(1, n_aB, u)
to_Ab <- rbinom(1, n_ab_mut, 0.5)
to_aB <- n_ab_mut - to_Ab
to_Ab
to_aB
drift <- function(x, N) {
return (rmultinom(n=1, size=N, prob=x))
}
## joint operators
evolve_det <- function(x, N, u, r, s) {
return (select_det(recombine_det(mutate_det(drift_rel(x, N), u), r), s))
}
drift_rel <- function(x, N) {
return (rmultinom(n=1, size=N, prob=x))
}
drift_abs <- function(x) {
N <- sum(x)
return (rmultinom(n=1, size=N, prob=x))
}
## joint operators
evolve_det <- function(x, N, u, r, s) {
return (select_det(recombine_det(mutate_det(drift_rel(x, N), u), r), s))
}
evolve_random <- function(x, N, u, r, s) {
return (select_random(recombine_random(mutate_random(drift_abs(x), u), r), s))
}
for(i in 1:1e+3) {
x1 <- drift_abs(x1)
cat(x1)
cat("\n")
}
for(i in 1:1e+3) {
x1 <- drift_abs(x1)
cat(x1)
cat("\n")
}
for(i in 1:1e+3) {
x1 <- drift_abs(x1)
cat(x1)
cat("\n")
}
for(i in 1:1e+3) {
x1 <- drift_abs(x1)
cat(x1)
cat("\n")
}
for(i in 1:1e+5) {
x1 <- drift_abs(x1)
cat(x1)
cat("\n")
}
x1
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
x1
for(i in 1:1e+3) {
x1 <- drift_abs(x1)
cat(x1)
cat("\n")
}
for(i in 1:1e+4) {
x1 <- drift_abs(x1)
cat(x1)
cat("\n")
}
for(i in 1:1e+5) {
x1 <- drift_abs(x1)
cat(x1)
cat("\n")
}
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
for(i in 1:1e+5) {
x1 <- drift_abs(x1)
cat(x1)
cat("\n")
}
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
evolve_random <- function(x, u, r, s) {
return (select_random(recombine_random(mutate_random(drift_abs(x), u), r), s))
}
evolve_neutral <- function(x, u, r, s) {
return (recombine_random(mutate_random(drift_abs(x), u), r))
}
## 1-population
u <- 1e-6
r <- 1e-5
x1
for(i in 1:1e+5) {
x1 <- evolve_neutral(x1, u, r, s)
cat(x1)
cat("\n")
}
x1
x1 <- mutate_random(drift_abs(x), u)
x1
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
x1
for(i in 1:1e+3) {
x1 <- mutate_random(drift_abs(x), u)
cat(x1)
cat("\n")
}
for(i in 1:1e+5) {
x1 <- mutate_random(drift_abs(x), u)
cat(x1)
cat("\n")
}
x
for(i in 1:1e+5) {
x1 <- recombine_random(x1, 1e-4)
cat(x1)
cat("\n")
}
for(i in 1:1e+5) {
x1 <- drift_abs(x1)
cat(x1)
cat("\n")
}
for(i in 1:1e+5) {
x1 <- mutate_random(drift_abs(x), u)
cat(x1)
cat("\n")
}
r
u
for(i in 1:1e+5) {
x1 <- recombine_random(mutate_random(drift_abs(x), u), r)
cat(x1)
cat("\n")
}
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
for(i in 1:1e+5) {
x1 <- evolve_neutral(x1, u, r)
cat(x1)
cat("\n")
}
x
u
r
evolve_neutral <- function(x, u, r, s) {
return (recombine_random(mutate_random(drift_abs(x), u), r))
}
evolve_neutral
x1
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
x1 <- recombine_random(mutate_random(drift_abs(x), u), r)
for(i in 1:1e+5) {
x1 <- recombine_random(mutate_random(drift_abs(x), u), r)
cat(x1)
cat("\n")
}
x
for(i in 1:1e+5) {
x1 <- recombine_random(mutate_random(drift_abs(x1), u), r)
cat(x1)
cat("\n")
}
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
drift_abs(x1)
drift_abs(x1)
drift_abs(x1)
drift_abs(x1)
drift_abs(x1)
drift_abs(x1)
drift_abs(x1)
drift_abs(x1)
drift_abs(x1)
drift_abs(x1)
drift_abs(x1)
mutate_random(drift_abs(x1)
mutate_random(drift_abs(x1), u)
mutate_random(drift_abs(x1), u)
mutate_random(drift_abs(x1), u)
mutate_random(drift_abs(x1), u)
mutate_random(drift_abs(x1), u)
mutate_random(drift_abs(x1), u)
for(i in 1:1e+2) {
x1 <- recombine_random(mutate_random(drift_abs(x1), u), r)
cat(x1)
cat("\n")
}
for(i in 1:1e+3) {
x1 <- recombine_random(mutate_random(drift_abs(x1), u), r)
cat(x1)
cat("\n")
}
for(i in 1:1e+4) {
x1 <- recombine_random(mutate_random(drift_abs(x1), u), r)
cat(x1)
cat("\n")
}
u
u=1e-4
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
for(i in 1:1e+4) {
x1 <- recombine_random(mutate_random(drift_abs(x1), u), r)
cat(x1)
cat("\n")
}
u=1e-3
for(i in 1:1e+4) {
x1 <- recombine_random(mutate_random(drift_abs(x1), u), r)
cat(x1)
cat("\n")
}
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
x1
for(i in 1:1e+4) {
x1 <- recombine_random(mutate_random(drift_abs(x1), u), r)
cat(x1)
cat("\n")
}
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
## vector of relative frequencies of haplotypes c21, c22, c23, c24
x2 <- c(5000, 3000, 1500, 500) # init
u
u=1e-5
for(i in 1:1e+4) {
x1 <- recombine_random(mutate_random(drift_abs(x1), u), r)
cat(x1)
cat("\n")
}
n_ab <- x[1]
x
n_ab <- x[1]
n_Ab <- x[2]
n_aB <- x[3]
n_ab_mut <- rbinom(1, n_ab, 2 * u)
n_Ab_mut <- rbinom(1, n_Ab, u)
n_aB_mut <- rbinom(1, n_aB, u)
n_ab_mut
n_Ab_mut
n_aB_mut
to_Ab <- rbinom(1, n_ab_mut, 0.5)
to_aB <- n_ab_mut - to_Ab
to_Ab
to_aB
n_ab_mut
n_Ab_mut
to_aB
x
x[1] <- x[1] - n_ab_mut
x[2] <- x[2] - n_Ab_mut  + to_Ab
x[3] <- x[3] - n_aB_mut + to_aB
x[4] <- x[4] + n_Ab_mut + n_aB_mut
x
n_ab <- x[1]
n_Ab <- x[2]
n_aB <- x[3]
n_ab_mut <- rbinom(1, n_ab, 2 * u)
n_Ab_mut <- rbinom(1, n_Ab, u)
n_aB_mut <- rbinom(1, n_aB, u)
to_Ab <- rbinom(1, n_ab_mut, 0.5)
to_aB <- n_ab_mut - to_Ab
x[1] <- x[1] - n_ab_mut
x[2] <- x[2] - n_Ab_mut  + to_Ab
x[3] <- x[3] - n_aB_mut + to_aB
x[4] <- x[4] + n_Ab_mut + n_aB_mut
return(x)
x
n_ab_mut
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
## vector of relative frequencies of haplotypes c21, c22, c23, c24
x2 <- c(5000, 3000, 1500, 500) # init
## working with haplotype counts, therefore, no factor of 2 in pop. sizes
N1 <- sum(x1)
N2 <- sum(x2)
## 1-population
u <- 1e-6
r <- 1e-5
s <- -1e-4
## num gens spent in each epoch
epochs_gen <- c(1e+3, 5e+3, 4e+3)
## pop sizes per epoch
epochs_pop <- c(1e+4, 2e+4, 1e+5)
v <- burn_in(x1, u, r, s, tol=1e-7)
for(i in 1:1e+5) {
x1 <- recombine_random(x1, 1e-4)
cat(x1)
cat("\n")
}
for(i in 1:1e+5) {
x1 <- drift_abs(x1)
cat(x1)
cat("\n")
}
for(i in 1:1e+4) {
x1 <- recombine_random(mutate_random(drift_abs(x1), u), r)
cat(x1)
cat("\n")
}
x1
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
for(i in 1:1e+4) {
x1 <- recombine_random(mutate_random(drift_abs(x1), u), r)
cat(x1)
cat("\n")
}
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
## working with haplotype counts, therefore, no factor of 2 in pop. sizes
N1 <- sum(x1)
N1
for(i in 1:1e+4) {
x1 <- recombine_random(drift_abs(x1), r)
cat(x1)
cat("\n")
}
for(i in 1:1e+4) {
x1 <- mutate_random(drift_abs(x1), u)
cat(x1)
cat("\n")
}
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
for(i in 1:1e+4) {
x1 <- mutate_random(drift_abs(x1), u)
cat(x1)
cat("\n")
}
for(i in 1:1e+4) {
x1 <- mutate_random(drift_abs(x1), u)
cat(x1)
cat("\n")
}
for(i in 1:1e+4) {
x1 <- mutate_random(drift_abs(x1), u)
cat(x1)
cat("\n")
}
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
for(i in 1:1e+4) {
x1 <- mutate_random(drift_abs(x1), u)
cat(x1)
cat("\n")
}
u
u=1e-4
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
for(i in 1:1e+4) {
x1 <- mutate_random(drift_abs(x1), u)
cat(x1)
cat("\n")
}
for(i in 1:1e+4) {
x1 <- mutate_random(drift_abs(x1), u)
cat(x1)
cat("\n")
}
u
u=1e-3
## vector of relative frequencies of haplotypes c11, c12, c13, c14
x1 <- c(5000, 3000, 1500, 2500) # init
x1 <- c(5000, 3000, 1500, 2500) # init
for(i in 1:1e+4) {
x1 <- mutate_random(drift_abs(x1), u)
cat(x1)
cat("\n")
}
x1 <- c(5000, 3000, 1500, 2500) # init
for(i in 1:1e+4) {
x1 <- mutate_random(drift_abs(x1), u)
cat(x1)
cat("\n")
}
u=1e-4
x1 <- c(5000, 3000, 1500, 2500) # init
for(i in 1:1e+4) {
x1 <- mutate_random(drift_abs(x1), u)
cat(x1)
cat("\n")
}
u
u=1e-5
x1 <- c(5000, 3000, 1500, 2500) # init
for(i in 1:1e+4) {
x1 <- mutate_random(drift_abs(x1), u)
cat(x1)
cat("\n")
}
u
x1
x1 <- c(5000, 3000, 1500, 2500) # init
for(i in 1:1e+4) {
x1 <- mutate_random(drift_abs(x1), u)
cat(x1)
cat("\n")
}
Ab_replacement
n_ab <- x[1]
n_Ab <- x[2]
n_aB <- x[3]
n_AB <- x[4]
Ab_dead <- rbinom(1, n_Ab, abs(s))
Ab_replacement <- rmultinom(1, Ab_dead, prob=x)
Ab_replacement
Ab_dead
Ab_dead <- rbinom(1, n_Ab, 1e-1)
Ab_dead
Ab_replacement <- rmultinom(1, Ab_dead, prob=x)
Ab_replacement
(0.7)^18
1.83071e-08 / 3.09002e-07
5/11
2.4485e-05 / 5.38779e-05
1.55322e-07 / 5.54588e-07
3.28752e-08 / 5.62721e-07
8.15626e-08 / 4.23875e-07
4.44428e-06 / 9.46988e-06
5/11
1.76754e-07 / 2.62429e-06
1.33117e-06 / 3.94052e-06
2.45764e-06 / 5.45213e-06
2.52997e-06 / 6.59148e-06
2.84843e-06 / 5.46835e-06
7.31194e-07 / 3.43338e-06
2.83772e-06 / 6.77313e-06
9.50079e-07 / 6.25463e-06
1.29129e-06 / 3.83454e-06
5 / 0.6
15*3*0.5
15*3.3*0.5
15*3.33333*0.5
