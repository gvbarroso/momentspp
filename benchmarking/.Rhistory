p3 <- p3 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p3
p3
p3 <- ggplot(data=hr11, aes(x=r, y=expectation, color=as.factor(alpha_1)))
p3 <- p3 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p3 <- p3 + scale_color_brewer(palette="PuOr")
p3 <- p3 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4))
p3 <- p3 + scale_y_log10(breaks=pretty_breaks())
p3 <- p3 + labs(title="Symmetric Population Sizes", x="r", y="E[Hr_11]")
p3 <- p3 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p3
save_plot("selection/no_migration/Hr_11.pdf", p3, base_height=12, base_width=12)
p3 <- ggplot(data=hr11, aes(x=r, y=expectation * 1e+3, color=as.factor(alpha_1)))
p3 <- p3 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p3 <- p3 + scale_color_brewer(palette="PuOr")
p3 <- p3 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4))
p3 <- p3 + scale_y_log10(breaks=pretty_breaks())
p3 <- p3 + labs(title="Symmetric Population Sizes", x="r", y="E[Hr_11] (x 1000)")
p3 <- p3 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p3
p3 <- ggplot(data=hr11, aes(x=r, y=expectation * 1e+3, color=as.factor(alpha_1)))
p3 <- p3 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p3 <- p3 + scale_color_brewer(palette="PuOr")
p3 <- p3 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4))
p3 <- p3 + scale_y_log10(breaks=pretty_breaks())
p3 <- p3 + labs(title="Symmetric Population Sizes", x="r", y="E[Hr_11] (x 10^-3)")
p3 <- p3 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p3
save_plot("selection/no_migration/Hr_11.pdf", p3, base_height=12, base_width=12)
save_plot("selection/no_migration/Hr_11.pdf", p3, base_height=12, base_width=12)
# asymmetric population sizes
df_sym_N <- df[df$N1!=df$N2,]
df_sym_N[df_sym_N$r==0,]$r <- 1e-12 # for log transformation
# D1D2
d1d2 <- subset(df_sym_N, stats %in% "DD_1_2")
d1d2$ratio <- d1d2$expectation / subset(df_sym_N, stats %in% "pi2_1_2_1_2")$expectation
p7 <- ggplot(data=d1d2, aes(x=r, y=ratio)) + facet_grid(+alpha_1~alpha_2)
p7 <- p7 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p7 <- p7 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p7 <- p7 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.2, 0.3))
p7 <- p7 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p7 <- p7 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p7
p7
# all population sizes
df_cpy <- df
df_cpy[df_cpy$r==0,]$r <- 1e-12 # for log transformation
# D1D2
d1d2 <- subset(df_cpy, stats %in% "DD_1_2")
d1d2$ratio <- d1d2$expectation / subset(df_cpy, stats %in% "pi2_1_2_1_2")$expectation
df_cpy
p7 <- ggplot(data=d1d2, aes(x=r, y=ratio, color=as.factor(N2))) + facet_grid(+alpha_1~alpha_2)
p7 <- p7 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p7 <- p7 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p7 <- p7 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.2, 0.3))
p7 <- ggplot(data=d1d2, aes(x=r, y=ratio, color=as.factor(N2))) + facet_grid(+alpha_1~alpha_2)
p7 <- p7 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p7 <- p7 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p7 <- p7 + labs(title="All Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p7 <- p7 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p7
p7
p7 <- ggplot(data=d1d2, aes(x=r, y=ratio, color=as.factor(N2))) + facet_grid(+s1~s2)
p7 <- p7 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p7 <- p7 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p7 <- p7 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.2, 0.3))
p7 <- p7 + labs(title="All Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p7 <- p7 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p7
p7 <- ggplot(data=d1d2, aes(x=r, y=ratio, color=as.factor(N2))) + facet_grid(+s1~s2)
p7 <- p7 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p7 <- p7 + scale_color_brewer(palette="PuOr")
p7 <- p7 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p7 <- p7 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.2, 0.3))
p7 <- p7 + labs(title="All Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p7 <- p7 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p7
p7
p7 <- ggplot(data=d1d2, aes(x=r, y=ratio, color=as.factor(N2))) + facet_grid(+s1~s2)
p7 <- p7 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p7 <- p7 + scale_color_brewer(palette="Dark2")
p7 <- p7 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p7 <- p7 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.2, 0.3))
p7 <- p7 + labs(title="All Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p7 <- p7 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p7
save_plot("selection/no_migration/Covar_D_no-mig_3.pdf", p7, base_height=12, base_width=12)
# Fst at the Left Locus
Hl_12 <- subset(df_cpy, stats %in% "Hl_1_2")
Hl_21 <- subset(df_cpy, stats %in% "Hl_2_1")
Hl_11 <- subset(df_cpy, stats %in% "Hl_1_1")
Hl_22 <- subset(df_cpy, stats %in% "Hl_2_2")
pi_between <- (Hl_12$expectation + Hl_21$expectation) / 2
pi_within <- (Hl_11$expectation + Hl_22$expectation) / 2
fst <- Hl_12 # just to copy the data frame
fst$expectation <- 1 - pi_within / pi_between # we'll be looking at this one
p10 <- plot_ly(x=fst$alpha_1, y=fst$alpha_2, z=fst$expectation, type="scatter3d", mode="markers", color=fst$expectation)
p10
p10
View(fst)
p10 <- plot_ly(x=fst$s1, y=fst$s1, z=fst$expectation, type="scatter3d", mode="markers", color=fst$N2)
p10
p10 <- plot_ly(x=fst$s1, y=fst$s2, z=fst$expectation, type="scatter3d", mode="markers", color=fst$N2)
p10
# Fst at the Right Locus
Hr_12 <- subset(df_cpy, stats %in% "Hr_1_2")
#Hr_21 <- subset(df_cpy, stats %in% "Hr_2_1")
Hr_11 <- subset(df_cpy, stats %in% "Hr_1_1")
Hr_22 <- subset(df_cpy, stats %in% "Hr_2_2")
pi_between <- Hr_12$expectation #(Hr_12$expectation + Hr_21$expectation) / 2
pi_within <- (Hr_11$expectation + Hr_22$expectation) / 2
fst <- Hr_12
fst$expectation <- 1 - pi_within / pi_between
p9 <- ggplot(data=fst, aes(x=r, y=expectation)) + facet_grid(+alpha_1~alpha_2)
p9 <- p9 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p9 <- p9 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p9 <- p9 + scale_y_log10(breaks=pretty_breaks())
p9 <- p9 + labs(title="Symmetric Population Sizes", x="r", y="Fst neutral locus")
p9 <- p9 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p9
p9 <- ggplot(data=fst, aes(x=r, y=expectation)) + facet_grid(+s1~s2)
p9 <- p9 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p9 <- p9 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p9 <- p9 + scale_y_log10(breaks=pretty_breaks())
p9 <- p9 + labs(title="Symmetric Population Sizes", x="r", y="Fst neutral locus")
p9 <- p9 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p9 <- p9 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p9 <- ggplot(data=fst, aes(x=r, y=expectation, color=as.factor(N2))) + facet_grid(+s1~s2)
p9 <- p9 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p9 <- p9 + scale_color_brewer(palette="Dark2")
p9 <- p9 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p9 <- p9 + scale_y_log10(breaks=pretty_breaks())
p9 <- p9 + labs(title="Symmetric Population Sizes", x="r", y="Fst neutral locus")
p9 <- p9 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p9
View(params)
p4
p4
tbl <- as.data.frame(expectation)
tbl$stats <- core_stats
scenario <- NULL
for(i in 1:n_models) {
scenario <- c(scenario, rep(i, length(core_stats)))
}
tbl$scenario <- scenario
df <- full_join(tbl, params, by="scenario")
# transforms variables
df$alpha_1 <- 2 * df$s1 * df$N1
df$alpha_2 <- 2 * df$s2 * df$N2
View(df)
df <- df[df$r < 1e-3,] # for increased resolution in the plots
# all population sizes
df_cpy <- df
df_cpy[df_cpy$r==0,]$r <- 1e-12 # for log transformation
# D1D2
d1d2 <- subset(df_cpy, stats %in% "DD_1_2")
d1d2$ratio <- d1d2$expectation# / subset(df_cpy, stats %in% "pi2_1_2_1_2")$expectation
p7 <- ggplot(data=d1d2, aes(x=r, y=ratio, color=as.factor(N2))) + facet_grid(+s1~s2)
p7 <- p7 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p7 <- p7 + scale_color_brewer(palette="Dark2")
p7 <- p7 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p7 <- p7 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.2, 0.3))
p7 <- p7 + labs(title="All Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p7
# D1D2
d1d2 <- subset(df_sym_N, stats %in% "DD_1_2")
p1 <- ggplot(data=d1d2, aes(x=r, y=expectation)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p1 <- p1 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.2, 0.3))
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p1
p1 <- ggplot(data=d1d2, aes(x=r, y=ratio)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p1 <- p1 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.2, 0.3))
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p1
p1 <- ggplot(data=d1d2, aes(x=r, y=ratio)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p1 <- p1 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.2, 0.3))
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p1
d1d2$ratio <- d1d2$expectation / subset(df_sym_N, stats %in% "pi2_1_2_1_2")$expectation
p1 <- ggplot(data=d1d2, aes(x=r, y=ratio)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p1 <- p1 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.2, 0.3))
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p1
p1
df <- df[df$r < 1e-3,] # for increased resolution in the plots
# symmetric population sizes
df_sym_N <- df[df$N1==df$N2,]
df_sym_N[df_sym_N$r==0,]$r <- 1e-12 # for log transformation
# D1D2
d1d2 <- subset(df_sym_N, stats %in% "DD_1_2")
d1d2$ratio <- d1d2$expectation / subset(df_sym_N, stats %in% "pi2_1_2_1_2")$expectation
p1 <- ggplot(data=d1d2, aes(x=r, y=ratio)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p1 <- p1 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.2, 0.3))
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p1
p1 <- ggplot(data=d1d2, aes(x=r, y=expectation)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p1 <- p1 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.2, 0.3))
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p1
p1
p1 <- ggplot(data=d1d2, aes(x=r, y=expectation)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p1 <- p1 + scale_y_log10(breaks=pretty_breaks())
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p1
p1
p1 <- ggplot(data=d1d2, aes(x=r, y=expectation)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p1 <- p1 + scale_y_log10(breaks=c(1e-7, 2e-7, 4e-7, 6e-7, 1e-6))
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p1
save_plot("selection/no_migration/Covar_D_no-mig_1.pdf", p1, base_height=12, base_width=12)
d1d2 <- d1d2[d1d2$alpha_1==d1d2$alpha_2,] # symmetric alpha
p2 <- ggplot(data=d1d2, aes(x=alpha_1, y=expectation, color=as.factor(r)))
p2 <- p2 + geom_point(size=3) + geom_line() + theme_bw()
p2 <- p2 + scale_color_brewer(palette="PuOr")
p2 <- p2 + labs(title="Symmetric Population Sizes and Selection coefficients", x="2Ns", y="E[D1D2]")
p2 <- p2 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p2
save_plot("selection/no_migration/Covar_D_no-mig_2.pdf", p2, base_height=12, base_width=12)
p2 <- ggplot(data=d1d2, aes(x=alpha_1, y=expectation, color=as.factor(r)))
p2 <- p2 + geom_point(size=3) + geom_line() + theme_bw()
p2 <- p2 + scale_color_brewer(palette="PuOr")
p2 <- p2 + scale_y_log10(breaks=c(1e-7, 2e-7, 4e-7, 6e-7, 1e-6))
p2 <- p2 + labs(title="Symmetric Population Sizes and Selection coefficients", x="2Ns", y="E[D1D2]")
p2 <- p2 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p2
d1d2 <- d1d2[d1d2$alpha_1==d1d2$alpha_2,] # symmetric alpha
p2 <- ggplot(data=d1d2, aes(x=alpha_1, y=expectation, color=as.factor(r)))
p2 <- p2 + geom_point(size=3) + geom_line() + theme_bw()
p2 <- p2 + scale_color_brewer(palette="PuOr")
p2 <- p2 + scale_y_log10(breaks=c(1e-7, 2e-7, 4e-7, 6e-7, 1e-6))
p2 <- p2 + labs(title="Symmetric Population Sizes and Selection coefficients", x="2Ns", y="E[D1D2]")
p2 <- p2 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
save_plot("selection/no_migration/Covar_D_no-mig_2.pdf", p2, base_height=12, base_width=12)
# D1D2
d1d2 <- subset(df_cpy, stats %in% "DD_1_2")
# all population sizes
df_cpy <- df
df_cpy[df_cpy$r==0,]$r <- 1e-12 # for log transformation
# D1D2
d1d2 <- subset(df_cpy, stats %in% "DD_1_2")
d1d2$ratio <- d1d2$expectation / subset(df_cpy, stats %in% "pi2_1_2_1_2")$expectation
p7 <- ggplot(data=d1d2, aes(x=r, y=ratio, color=as.factor(N2))) + facet_grid(+s1~s2)
p7 <- p7 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p7 <- p7 + scale_color_brewer(palette="Dark2")
p7 <- p7 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p7 <- p7 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.2, 0.3))
p7 <- p7 + labs(title="All Population Sizes", x="r", y="E[D1D2] / E[pi2_1212]")
p7 <- p7 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p7
p7 <- ggplot(data=d1d2, aes(x=r, y=expectation, color=as.factor(N2))) + facet_grid(+s1~s2)
p7 <- p7 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p7 <- p7 + scale_color_brewer(palette="Dark2")
p7 <- p7 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p7 <- p7 + scale_y_log10(breaks=c(0.01, 0.05, 0.10, 0.2, 0.3))
p7 <- p7 + labs(title="All Population Sizes", x="r", y="E[D1D2]")
p7 <- p7 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p7
p7 <- ggplot(data=d1d2, aes(x=r, y=expectation, color=as.factor(N2))) + facet_grid(+s1~s2)
p7 <- p7 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p7 <- p7 + scale_color_brewer(palette="Dark2")
p7 <- p7 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p7 <- p7 + scale_y_log10(breaks=c(1e-7, 2e-7, 4e-7, 6e-7, 1e-6))
p7 <- p7 + labs(title="All Population Sizes", x="r", y="E[D1D2]")
p7 <- p7 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p7
save_plot("selection/no_migration/Covar_D_no-mig_3.pdf", p7, base_height=12, base_width=12)
?plot_ly
p4 <- plot_ly(data=fst, x=~alpha_1, y=~alpha_2, z=~expectation, type="scatter3d",
mode="markers", color=fst$expectation)
p4
# Fst at the Left Locus
Hl_12 <- subset(df_sym_N, stats %in% "Hl_1_2")
Hl_21 <- subset(df_sym_N, stats %in% "Hl_2_1")
Hl_11 <- subset(df_sym_N, stats %in% "Hl_1_1")
Hl_22 <- subset(df_sym_N, stats %in% "Hl_2_2")
pi_between <- (Hl_12$expectation + Hl_21$expectation) / 2
pi_within <- (Hl_11$expectation + Hl_22$expectation) / 2
fst <- Hl_12 # just to copy the data frame
fst$expectation <- 1 - pi_within / pi_between # we'll be looking at this one
p4 <- plot_ly(data=fst, x=~alpha_1, y=~alpha_2, z=~expectation, type="scatter3d",
mode="markers", color=fst$expectation)
p4
tbl <- as.data.frame(expectation)
tbl$stats <- core_stats
scenario <- NULL
for(i in 1:n_models) {
scenario <- c(scenario, rep(i, length(core_stats)))
}
tbl$scenario <- scenario
df <- full_join(tbl, params, by="scenario")
# transforms variables
df$alpha_1 <- 2 * df$s1 * df$N1
df$alpha_2 <- 2 * df$s2 * df$N2
df <- df[df$r < 1e-3,] # for increased resolution in the plots
# symmetric population sizes
df_sym_N <- df[df$N1==df$N2,]
df_sym_N[df_sym_N$r==0,]$r <- 1e-12 # for log transformation
# D1D2
d1d2 <- subset(df_sym_N, stats %in% "DD_1_2")
d1d2$ratio <- d1d2$expectation / subset(df_sym_N, stats %in% "pi2_1_2_1_2")$expectation
# save ratio D1D2/ pi2_1212 for later, plot D1D2 expectation now
p1 <- ggplot(data=d1d2, aes(x=r, y=expectation)) + facet_grid(+alpha_1~alpha_2)
p1 <- p1 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p1 <- p1 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p1 <- p1 + scale_y_log10(breaks=c(1e-7, 2e-7, 4e-7, 6e-7, 1e-6))
p1 <- p1 + labs(title="Symmetric Population Sizes", x="r", y="E[D1D2]")
p1 <- p1 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p1
save_plot("selection/no_migration/Covar_D_no-mig_1.pdf", p1, base_height=12, base_width=12)
d1d2 <- d1d2[d1d2$alpha_1==d1d2$alpha_2,] # symmetric alpha
p2 <- ggplot(data=d1d2, aes(x=alpha_1, y=expectation, color=as.factor(r)))
p2 <- p2 + geom_point(size=3) + geom_line() + theme_bw()
p2 <- p2 + scale_color_brewer(palette="PuOr")
save_plot("selection/no_migration/Covar_D_no-mig_2.pdf", p2, base_height=12, base_width=12)
# Hr
hr11 <- subset(df_sym_N, stats %in% "Hr_1_1")
p3 <- ggplot(data=hr11, aes(x=r, y=expectation * 1e+3, color=as.factor(alpha_1)))
p3 <- p3 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p3 <- p3 + scale_color_brewer(palette="PuOr")
p3 <- p3 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4))
p3 <- p3 + scale_y_log10(breaks=pretty_breaks())
p3 <- p3 + labs(title="Symmetric Population Sizes", x="r", y="E[Hr_11] (x 10^-3)")
p3 <- p3 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p3
save_plot("selection/no_migration/Hr_11.pdf", p3, base_height=12, base_width=12)
# Fst at the Left Locus
Hl_12 <- subset(df_sym_N, stats %in% "Hl_1_2")
Hl_21 <- subset(df_sym_N, stats %in% "Hl_2_1")
Hl_11 <- subset(df_sym_N, stats %in% "Hl_1_1")
Hl_22 <- subset(df_sym_N, stats %in% "Hl_2_2")
pi_between <- (Hl_12$expectation + Hl_21$expectation) / 2
pi_within <- (Hl_11$expectation + Hl_22$expectation) / 2
fst <- Hl_12 # just to copy the data frame
fst$expectation <- 1 - pi_within / pi_between # we'll be looking at this one
p4 <- plot_ly(data=fst, x=~alpha_1, y=~alpha_2, z=~expectation, type="scatter3d",
mode="markers", color=fst$expectation)
p4
fst
p4 <- plot_ly(data=fst, x=~alpha_1, y=~alpha_2, z=~expectation, type="scatter3d",
mode="markers")
p4
df_sym_N
# Fst at the Left Locus
Hl_12 <- subset(df_sym_N, stats %in% "Hl_1_2")
Hl_21 <- subset(df_sym_N, stats %in% "Hl_2_1")
Hl_11 <- subset(df_sym_N, stats %in% "Hl_1_1")
Hl_22 <- subset(df_sym_N, stats %in% "Hl_2_2")
pi_between <- (Hl_12$expectation + Hl_21$expectation) / 2
pi_within <- (Hl_11$expectation + Hl_22$expectation) / 2
fst <- Hl_12 # just to copy the data frame
fst$expectation <- 1 - pi_within / pi_between # we'll be looking at this one
summary(fst$expectation)
p4 <- plot_ly(data=fst, x=~alpha_1, y=~alpha_2, z=~expectation, type="scatter3d",
mode="markers")
p4
p4
p4 <- plot_ly(data=fst, x=~alpha_1, y=~alpha_2, z=~expectation, type="scatter3d",
mode="markers", color=expectation)
p4
p4 <- plot_ly(data=fst, x=~alpha_1, y=~alpha_2, z=~expectation, type="scatter3d",
mode="markers", color=~expectation)
p4
p8 <- plot_ly(data=fst, x=~s1, y=~s2, z=~expectation, type="scatter3d", mode="markers", color=~N2)
# Fst at the Left Locus
Hl_12 <- subset(df_cpy, stats %in% "Hl_1_2")
# all population sizes
df_cpy <- df
df_cpy[df_cpy$r==0,]$r <- 1e-12 # for log transformation
# D1D2
d1d2 <- subset(df_cpy, stats %in% "DD_1_2")
d1d2$ratio <- d1d2$expectation / subset(df_cpy, stats %in% "pi2_1_2_1_2")$expectation
p7 <- ggplot(data=d1d2, aes(x=r, y=expectation, color=as.factor(N2))) + facet_grid(+s1~s2)
p7 <- p7 + geom_point(size=3, shape=16) + geom_line() + theme_bw()
p7 <- p7 + scale_color_brewer(palette="Dark2")
p7 <- p7 + scale_x_log10(breaks=c(1e-12, 1e-6, 1e-5, 1e-4, 1e-3))
p7 <- p7 + scale_y_log10(breaks=c(1e-7, 2e-7, 4e-7, 6e-7, 1e-6))
p7 <- p7 + labs(title="All Population Sizes", x="r", y="E[D1D2]")
p7 <- p7 + theme(axis.title=element_text(size=16),
axis.text=element_text(size=12),
axis.text.x=element_text(angle=90, size=12, vjust=0.5, hjust=1.0),
legend.position="bottom")
p7
save_plot("selection/no_migration/Covar_D_no-mig_3.pdf", p7, base_height=12, base_width=12)
# Fst at the Left Locus
Hl_12 <- subset(df_cpy, stats %in% "Hl_1_2")
Hl_21 <- subset(df_cpy, stats %in% "Hl_2_1")
Hl_11 <- subset(df_cpy, stats %in% "Hl_1_1")
Hl_22 <- subset(df_cpy, stats %in% "Hl_2_2")
pi_between <- (Hl_12$expectation + Hl_21$expectation) / 2
pi_within <- (Hl_11$expectation + Hl_22$expectation) / 2
fst <- Hl_12 # just to copy the data frame
fst$expectation <- 1 - pi_within / pi_between # we'll be looking at this one
p8 <- plot_ly(data=fst, x=~s1, y=~s2, z=~expectation, type="scatter3d", mode="markers", color=~N2)
p8
p8
1e+4 * 64
(1e+4 * 64) / 1e+3
(1e+5 * 64) / 1e+3
(1e+6 * 64) / 1e+3
1 - (98/99 * 97/98 * 96/97 * 95/96 * 94/95 * 93/94 * 92/93)
0.07070707 / 0.05
0.05 / 0.07070707
1 - (98/99 * 97/98 * 96/97 * 95/96 * 94/95 * 93/94 * 92/93 * 91/92)
6.73819e-07 / 1.51333e-06
